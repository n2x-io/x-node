// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0--rc1
// source: n2x/protobuf/network/v1/routing/lsa.proto

package routing

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	topology "n2x.dev/x-api-go/grpc/resources/topology"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LSAType int32

const (
	LSAType_UNDEFINED_LSA      LSAType = 0
	LSAType_NODE_LSA           LSAType = 11
	LSAType_ROUTING_SCOPE_LSA  LSAType = 21
	LSAType_NETWORK_POLICY_LSA LSAType = 31
	LSAType_ROUTER_LSA         LSAType = 41
	LSAType_PROXY_LSA          LSAType = 51
	LSAType_APPSVC_LSA         LSAType = 61
)

// Enum value maps for LSAType.
var (
	LSAType_name = map[int32]string{
		0:  "UNDEFINED_LSA",
		11: "NODE_LSA",
		21: "ROUTING_SCOPE_LSA",
		31: "NETWORK_POLICY_LSA",
		41: "ROUTER_LSA",
		51: "PROXY_LSA",
		61: "APPSVC_LSA",
	}
	LSAType_value = map[string]int32{
		"UNDEFINED_LSA":      0,
		"NODE_LSA":           11,
		"ROUTING_SCOPE_LSA":  21,
		"NETWORK_POLICY_LSA": 31,
		"ROUTER_LSA":         41,
		"PROXY_LSA":          51,
		"APPSVC_LSA":         61,
	}
)

func (x LSAType) Enum() *LSAType {
	p := new(LSAType)
	*p = x
	return p
}

func (x LSAType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LSAType) Descriptor() protoreflect.EnumDescriptor {
	return file_n2x_protobuf_network_v1_routing_lsa_proto_enumTypes[0].Descriptor()
}

func (LSAType) Type() protoreflect.EnumType {
	return &file_n2x_protobuf_network_v1_routing_lsa_proto_enumTypes[0]
}

func (x LSAType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LSAType.Descriptor instead.
func (LSAType) EnumDescriptor() ([]byte, []int) {
	return file_n2x_protobuf_network_v1_routing_lsa_proto_rawDescGZIP(), []int{0}
}

// Status is received by routers/nodes by grpc
type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Disabled bool `protobuf:"varint,11,opt,name=disabled,proto3" json:"disabled,omitempty"`
	Deleted  bool `protobuf:"varint,21,opt,name=deleted,proto3" json:"deleted,omitempty"` // bool overLimit = 31;
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_network_v1_routing_lsa_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_network_v1_routing_lsa_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_network_v1_routing_lsa_proto_rawDescGZIP(), []int{0}
}

func (x *Status) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *Status) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

// LSASync is used by controllers in redis pub/sub to synchronize LSAs
type LSA struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type             LSAType           `protobuf:"varint,1,opt,name=type,proto3,enum=routing.LSAType" json:"type,omitempty"`
	NodeLSA          *NodeLSA          `protobuf:"bytes,11,opt,name=nodeLSA,proto3" json:"nodeLSA,omitempty"`
	RoutingScopeLSA  *RoutingScopeLSA  `protobuf:"bytes,21,opt,name=routingScopeLSA,proto3" json:"routingScopeLSA,omitempty"`
	NetworkPolicyLSA *NetworkPolicyLSA `protobuf:"bytes,31,opt,name=networkPolicyLSA,proto3" json:"networkPolicyLSA,omitempty"`
	RouterLSA        *RouterLSA        `protobuf:"bytes,41,opt,name=routerLSA,proto3" json:"routerLSA,omitempty"`
	ProxyLSA         *ProxyLSA         `protobuf:"bytes,51,opt,name=proxyLSA,proto3" json:"proxyLSA,omitempty"`
	AppSvcLSA        *AppSvcLSA        `protobuf:"bytes,61,opt,name=appSvcLSA,proto3" json:"appSvcLSA,omitempty"`
}

func (x *LSA) Reset() {
	*x = LSA{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_network_v1_routing_lsa_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LSA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LSA) ProtoMessage() {}

func (x *LSA) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_network_v1_routing_lsa_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LSA.ProtoReflect.Descriptor instead.
func (*LSA) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_network_v1_routing_lsa_proto_rawDescGZIP(), []int{1}
}

func (x *LSA) GetType() LSAType {
	if x != nil {
		return x.Type
	}
	return LSAType_UNDEFINED_LSA
}

func (x *LSA) GetNodeLSA() *NodeLSA {
	if x != nil {
		return x.NodeLSA
	}
	return nil
}

func (x *LSA) GetRoutingScopeLSA() *RoutingScopeLSA {
	if x != nil {
		return x.RoutingScopeLSA
	}
	return nil
}

func (x *LSA) GetNetworkPolicyLSA() *NetworkPolicyLSA {
	if x != nil {
		return x.NetworkPolicyLSA
	}
	return nil
}

func (x *LSA) GetRouterLSA() *RouterLSA {
	if x != nil {
		return x.RouterLSA
	}
	return nil
}

func (x *LSA) GetProxyLSA() *ProxyLSA {
	if x != nil {
		return x.ProxyLSA
	}
	return nil
}

func (x *LSA) GetAppSvcLSA() *AppSvcLSA {
	if x != nil {
		return x.AppSvcLSA
	}
	return nil
}

// NodeLSA is received by controllers from nodes via grpc
type NodeLSA struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID      string             `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	TenantID       string             `protobuf:"bytes,2,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	NetID          string             `protobuf:"bytes,3,opt,name=netID,proto3" json:"netID,omitempty"`
	SubnetID       string             `protobuf:"bytes,4,opt,name=subnetID,proto3" json:"subnetID,omitempty"`
	NodeID         string             `protobuf:"bytes,5,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	NetworkCIDR    string             `protobuf:"bytes,11,opt,name=networkCIDR,proto3" json:"networkCIDR,omitempty"`
	SubnetCIDR     string             `protobuf:"bytes,12,opt,name=subnetCIDR,proto3" json:"subnetCIDR,omitempty"`
	P2PHostID      string             `protobuf:"bytes,21,opt,name=P2PHostID,proto3" json:"P2PHostID,omitempty"`
	MAddrs         []string           `protobuf:"bytes,22,rep,name=MAddrs,proto3" json:"MAddrs,omitempty"`
	ExternalIPv4   string             `protobuf:"bytes,31,opt,name=externalIPv4,proto3" json:"externalIPv4,omitempty"`
	Port           int32              `protobuf:"varint,32,opt,name=port,proto3" json:"port,omitempty"`
	Priority       int32              `protobuf:"varint,41,opt,name=priority,proto3" json:"priority,omitempty"`
	IsRelay        bool               `protobuf:"varint,51,opt,name=isRelay,proto3" json:"isRelay,omitempty"`
	Endpoints      map[string]*IPAddr `protobuf:"bytes,81,rep,name=endpoints,proto3" json:"endpoints,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // map[dnsName]*IPAddr
	ExportedRoutes []string           `protobuf:"bytes,85,rep,name=exportedRoutes,proto3" json:"exportedRoutes,omitempty"`
	Connections    int32              `protobuf:"varint,101,opt,name=connections,proto3" json:"connections,omitempty"`
}

func (x *NodeLSA) Reset() {
	*x = NodeLSA{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_network_v1_routing_lsa_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeLSA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeLSA) ProtoMessage() {}

func (x *NodeLSA) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_network_v1_routing_lsa_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeLSA.ProtoReflect.Descriptor instead.
func (*NodeLSA) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_network_v1_routing_lsa_proto_rawDescGZIP(), []int{2}
}

func (x *NodeLSA) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *NodeLSA) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

func (x *NodeLSA) GetNetID() string {
	if x != nil {
		return x.NetID
	}
	return ""
}

func (x *NodeLSA) GetSubnetID() string {
	if x != nil {
		return x.SubnetID
	}
	return ""
}

func (x *NodeLSA) GetNodeID() string {
	if x != nil {
		return x.NodeID
	}
	return ""
}

func (x *NodeLSA) GetNetworkCIDR() string {
	if x != nil {
		return x.NetworkCIDR
	}
	return ""
}

func (x *NodeLSA) GetSubnetCIDR() string {
	if x != nil {
		return x.SubnetCIDR
	}
	return ""
}

func (x *NodeLSA) GetP2PHostID() string {
	if x != nil {
		return x.P2PHostID
	}
	return ""
}

func (x *NodeLSA) GetMAddrs() []string {
	if x != nil {
		return x.MAddrs
	}
	return nil
}

func (x *NodeLSA) GetExternalIPv4() string {
	if x != nil {
		return x.ExternalIPv4
	}
	return ""
}

func (x *NodeLSA) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *NodeLSA) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *NodeLSA) GetIsRelay() bool {
	if x != nil {
		return x.IsRelay
	}
	return false
}

func (x *NodeLSA) GetEndpoints() map[string]*IPAddr {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *NodeLSA) GetExportedRoutes() []string {
	if x != nil {
		return x.ExportedRoutes
	}
	return nil
}

func (x *NodeLSA) GetConnections() int32 {
	if x != nil {
		return x.Connections
	}
	return 0
}

type IPAddr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IPv4 string `protobuf:"bytes,1,opt,name=IPv4,proto3" json:"IPv4,omitempty"`
	IPv6 string `protobuf:"bytes,2,opt,name=IPv6,proto3" json:"IPv6,omitempty"`
}

func (x *IPAddr) Reset() {
	*x = IPAddr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_network_v1_routing_lsa_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPAddr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPAddr) ProtoMessage() {}

func (x *IPAddr) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_network_v1_routing_lsa_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPAddr.ProtoReflect.Descriptor instead.
func (*IPAddr) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_network_v1_routing_lsa_proto_rawDescGZIP(), []int{3}
}

func (x *IPAddr) GetIPv4() string {
	if x != nil {
		return x.IPv4
	}
	return ""
}

func (x *IPAddr) GetIPv6() string {
	if x != nil {
		return x.IPv6
	}
	return ""
}

type RoutingScopeLSA struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID     string `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	TenantID      string `protobuf:"bytes,2,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	NetID         string `protobuf:"bytes,3,opt,name=netID,proto3" json:"netID,omitempty"`
	RoutedSubnets bool   `protobuf:"varint,41,opt,name=routedSubnets,proto3" json:"routedSubnets,omitempty"` // connect subnets within the network
}

func (x *RoutingScopeLSA) Reset() {
	*x = RoutingScopeLSA{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_network_v1_routing_lsa_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutingScopeLSA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutingScopeLSA) ProtoMessage() {}

func (x *RoutingScopeLSA) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_network_v1_routing_lsa_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutingScopeLSA.ProtoReflect.Descriptor instead.
func (*RoutingScopeLSA) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_network_v1_routing_lsa_proto_rawDescGZIP(), []int{4}
}

func (x *RoutingScopeLSA) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *RoutingScopeLSA) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

func (x *RoutingScopeLSA) GetNetID() string {
	if x != nil {
		return x.NetID
	}
	return ""
}

func (x *RoutingScopeLSA) GetRoutedSubnets() bool {
	if x != nil {
		return x.RoutedSubnets
	}
	return false
}

type NetworkPolicyLSA struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID string           `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	TenantID  string           `protobuf:"bytes,2,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	NetID     string           `protobuf:"bytes,3,opt,name=netID,proto3" json:"netID,omitempty"`
	SubnetID  string           `protobuf:"bytes,4,opt,name=subnetID,proto3" json:"subnetID,omitempty"`
	Policy    *topology.Policy `protobuf:"bytes,11,opt,name=policy,proto3" json:"policy,omitempty"`
}

func (x *NetworkPolicyLSA) Reset() {
	*x = NetworkPolicyLSA{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_network_v1_routing_lsa_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkPolicyLSA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkPolicyLSA) ProtoMessage() {}

func (x *NetworkPolicyLSA) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_network_v1_routing_lsa_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkPolicyLSA.ProtoReflect.Descriptor instead.
func (*NetworkPolicyLSA) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_network_v1_routing_lsa_proto_rawDescGZIP(), []int{5}
}

func (x *NetworkPolicyLSA) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *NetworkPolicyLSA) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

func (x *NetworkPolicyLSA) GetNetID() string {
	if x != nil {
		return x.NetID
	}
	return ""
}

func (x *NetworkPolicyLSA) GetSubnetID() string {
	if x != nil {
		return x.SubnetID
	}
	return ""
}

func (x *NetworkPolicyLSA) GetPolicy() *topology.Policy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type RouterLSA struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationID   string `protobuf:"bytes,1,opt,name=locationID,proto3" json:"locationID,omitempty"`
	RouterID     string `protobuf:"bytes,5,opt,name=routerID,proto3" json:"routerID,omitempty"`
	P2PHostID    string `protobuf:"bytes,21,opt,name=P2PHostID,proto3" json:"P2PHostID,omitempty"` // repeated string MAddrs = 22;
	ExternalIPv4 string `protobuf:"bytes,31,opt,name=externalIPv4,proto3" json:"externalIPv4,omitempty"`
	Port         int32  `protobuf:"varint,32,opt,name=port,proto3" json:"port,omitempty"`
	Priority     int32  `protobuf:"varint,41,opt,name=priority,proto3" json:"priority,omitempty"`
	Connections  int32  `protobuf:"varint,101,opt,name=connections,proto3" json:"connections,omitempty"`
}

func (x *RouterLSA) Reset() {
	*x = RouterLSA{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_network_v1_routing_lsa_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouterLSA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouterLSA) ProtoMessage() {}

func (x *RouterLSA) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_network_v1_routing_lsa_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouterLSA.ProtoReflect.Descriptor instead.
func (*RouterLSA) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_network_v1_routing_lsa_proto_rawDescGZIP(), []int{6}
}

func (x *RouterLSA) GetLocationID() string {
	if x != nil {
		return x.LocationID
	}
	return ""
}

func (x *RouterLSA) GetRouterID() string {
	if x != nil {
		return x.RouterID
	}
	return ""
}

func (x *RouterLSA) GetP2PHostID() string {
	if x != nil {
		return x.P2PHostID
	}
	return ""
}

func (x *RouterLSA) GetExternalIPv4() string {
	if x != nil {
		return x.ExternalIPv4
	}
	return ""
}

func (x *RouterLSA) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *RouterLSA) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *RouterLSA) GetConnections() int32 {
	if x != nil {
		return x.Connections
	}
	return 0
}

type ProxyLSA struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationID string `protobuf:"bytes,1,opt,name=locationID,proto3" json:"locationID,omitempty"`
	// string proxyID = 5;
	ProxyName    string `protobuf:"bytes,7,opt,name=proxyName,proto3" json:"proxyName,omitempty"`
	P2PHostID    string `protobuf:"bytes,21,opt,name=P2PHostID,proto3" json:"P2PHostID,omitempty"` // repeated string MAddrs = 22;
	ExternalIPv4 string `protobuf:"bytes,31,opt,name=externalIPv4,proto3" json:"externalIPv4,omitempty"`
	Port         int32  `protobuf:"varint,32,opt,name=port,proto3" json:"port,omitempty"`
	IPv6         string `protobuf:"bytes,35,opt,name=IPv6,proto3" json:"IPv6,omitempty"`
	Priority     int32  `protobuf:"varint,41,opt,name=priority,proto3" json:"priority,omitempty"`
	Connections  int32  `protobuf:"varint,101,opt,name=connections,proto3" json:"connections,omitempty"`
}

func (x *ProxyLSA) Reset() {
	*x = ProxyLSA{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_network_v1_routing_lsa_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyLSA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyLSA) ProtoMessage() {}

func (x *ProxyLSA) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_network_v1_routing_lsa_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyLSA.ProtoReflect.Descriptor instead.
func (*ProxyLSA) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_network_v1_routing_lsa_proto_rawDescGZIP(), []int{7}
}

func (x *ProxyLSA) GetLocationID() string {
	if x != nil {
		return x.LocationID
	}
	return ""
}

func (x *ProxyLSA) GetProxyName() string {
	if x != nil {
		return x.ProxyName
	}
	return ""
}

func (x *ProxyLSA) GetP2PHostID() string {
	if x != nil {
		return x.P2PHostID
	}
	return ""
}

func (x *ProxyLSA) GetExternalIPv4() string {
	if x != nil {
		return x.ExternalIPv4
	}
	return ""
}

func (x *ProxyLSA) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ProxyLSA) GetIPv6() string {
	if x != nil {
		return x.IPv6
	}
	return ""
}

func (x *ProxyLSA) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *ProxyLSA) GetConnections() int32 {
	if x != nil {
		return x.Connections
	}
	return 0
}

type AppSvcLSA struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppSvc      *topology.AppSvc `protobuf:"bytes,11,opt,name=appSvc,proto3" json:"appSvc,omitempty"`
	P2PHostID   string           `protobuf:"bytes,51,opt,name=P2PHostID,proto3" json:"P2PHostID,omitempty"` // repeated string MAddrs = 52;
	Priority    int32            `protobuf:"varint,71,opt,name=priority,proto3" json:"priority,omitempty"`
	IPv6        string           `protobuf:"bytes,81,opt,name=IPv6,proto3" json:"IPv6,omitempty"`
	Connections int32            `protobuf:"varint,101,opt,name=connections,proto3" json:"connections,omitempty"`
}

func (x *AppSvcLSA) Reset() {
	*x = AppSvcLSA{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_network_v1_routing_lsa_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppSvcLSA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppSvcLSA) ProtoMessage() {}

func (x *AppSvcLSA) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_network_v1_routing_lsa_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppSvcLSA.ProtoReflect.Descriptor instead.
func (*AppSvcLSA) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_network_v1_routing_lsa_proto_rawDescGZIP(), []int{8}
}

func (x *AppSvcLSA) GetAppSvc() *topology.AppSvc {
	if x != nil {
		return x.AppSvc
	}
	return nil
}

func (x *AppSvcLSA) GetP2PHostID() string {
	if x != nil {
		return x.P2PHostID
	}
	return ""
}

func (x *AppSvcLSA) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *AppSvcLSA) GetIPv6() string {
	if x != nil {
		return x.IPv6
	}
	return ""
}

func (x *AppSvcLSA) GetConnections() int32 {
	if x != nil {
		return x.Connections
	}
	return 0
}

var File_n2x_protobuf_network_v1_routing_lsa_proto protoreflect.FileDescriptor

var file_n2x_protobuf_network_v1_routing_lsa_proto_rawDesc = []byte{
	0x0a, 0x29, 0x6e, 0x32, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x67, 0x2f, 0x6c, 0x73, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x72, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x67, 0x1a, 0x2f, 0x6e, 0x32, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f,
	0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2f, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x6e, 0x32, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31,
	0x2f, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2f, 0x76, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x3e, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x22, 0xf5, 0x02, 0x0a, 0x03, 0x4c, 0x53, 0x41, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x4c, 0x53, 0x41, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x2a, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x4c, 0x53, 0x41, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x4c, 0x53, 0x41, 0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x4c, 0x53, 0x41, 0x12, 0x42, 0x0a, 0x0f,
	0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x4c, 0x53, 0x41, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x4c, 0x53, 0x41, 0x52,
	0x0f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x4c, 0x53, 0x41,
	0x12, 0x45, 0x0a, 0x10, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x4c, 0x53, 0x41, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x4c, 0x53, 0x41, 0x52, 0x10, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x4c, 0x53, 0x41, 0x12, 0x30, 0x0a, 0x09, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x4c, 0x53, 0x41, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x4c, 0x53, 0x41, 0x52, 0x09,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x4c, 0x53, 0x41, 0x12, 0x2d, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x4c, 0x53, 0x41, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x4c, 0x53, 0x41, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x4c, 0x53, 0x41, 0x12, 0x30, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x53,
	0x76, 0x63, 0x4c, 0x53, 0x41, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x76, 0x63, 0x4c, 0x53, 0x41, 0x52,
	0x09, 0x61, 0x70, 0x70, 0x53, 0x76, 0x63, 0x4c, 0x53, 0x41, 0x22, 0xcb, 0x04, 0x0a, 0x07, 0x4e,
	0x6f, 0x64, 0x65, 0x4c, 0x53, 0x41, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74,
	0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x49, 0x44, 0x52, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x49, 0x44, 0x52, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x43, 0x49, 0x44, 0x52, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x43, 0x49, 0x44, 0x52, 0x12, 0x1c, 0x0a, 0x09,
	0x50, 0x32, 0x50, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x50, 0x32, 0x50, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x41,
	0x64, 0x64, 0x72, 0x73, 0x18, 0x16, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x4d, 0x41, 0x64, 0x64,
	0x72, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x50,
	0x76, 0x34, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x49, 0x50, 0x76, 0x34, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x20,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x29, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x52, 0x65, 0x6c, 0x61,
	0x79, 0x18, 0x33, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x52, 0x65, 0x6c, 0x61, 0x79,
	0x12, 0x3d, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x51, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x4c, 0x53, 0x41, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12,
	0x26, 0x0a, 0x0e, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x73, 0x18, 0x55, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x4d, 0x0a, 0x0e, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x30, 0x0a, 0x06, 0x49, 0x50, 0x41, 0x64,
	0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x50, 0x76, 0x34, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x49, 0x50, 0x76, 0x34, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x50, 0x76, 0x36, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x50, 0x76, 0x36, 0x22, 0x87, 0x01, 0x0a, 0x0f, 0x52,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x4c, 0x53, 0x41, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x65, 0x74, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x12, 0x24,
	0x0a, 0x0d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x64, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x73, 0x18,
	0x29, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x64, 0x53, 0x75, 0x62,
	0x6e, 0x65, 0x74, 0x73, 0x22, 0xa8, 0x01, 0x0a, 0x10, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4c, 0x53, 0x41, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62,
	0x6e, 0x65, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62,
	0x6e, 0x65, 0x74, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79,
	0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22,
	0xdb, 0x01, 0x0a, 0x09, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x4c, 0x53, 0x41, 0x12, 0x1e, 0x0a,
	0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x32, 0x50,
	0x48, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x32,
	0x50, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x49, 0x50, 0x76, 0x34, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x50, 0x76, 0x34, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x20, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x29, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xf0, 0x01,
	0x0a, 0x08, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x4c, 0x53, 0x41, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x32, 0x50, 0x48,
	0x6f, 0x73, 0x74, 0x49, 0x44, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x32, 0x50,
	0x48, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x49, 0x50, 0x76, 0x34, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x50, 0x76, 0x34, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x20, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x49, 0x50, 0x76, 0x36, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x50,
	0x76, 0x36, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x29,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x65, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0xa5, 0x01, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x53, 0x76, 0x63, 0x4c, 0x53, 0x41, 0x12, 0x28,
	0x0a, 0x06, 0x61, 0x70, 0x70, 0x53, 0x76, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x76, 0x63,
	0x52, 0x06, 0x61, 0x70, 0x70, 0x53, 0x76, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x32, 0x50, 0x48,
	0x6f, 0x73, 0x74, 0x49, 0x44, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x32, 0x50,
	0x48, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x47, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x50, 0x76, 0x36, 0x18, 0x51, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x49, 0x50, 0x76, 0x36, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2a, 0x88, 0x01, 0x0a, 0x07, 0x4c, 0x53, 0x41,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45,
	0x44, 0x5f, 0x4c, 0x53, 0x41, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x4f, 0x44, 0x45, 0x5f,
	0x4c, 0x53, 0x41, 0x10, 0x0b, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x4f, 0x55, 0x54, 0x49, 0x4e, 0x47,
	0x5f, 0x53, 0x43, 0x4f, 0x50, 0x45, 0x5f, 0x4c, 0x53, 0x41, 0x10, 0x15, 0x12, 0x16, 0x0a, 0x12,
	0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x4c,
	0x53, 0x41, 0x10, 0x1f, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x52, 0x5f, 0x4c,
	0x53, 0x41, 0x10, 0x29, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x4f, 0x58, 0x59, 0x5f, 0x4c, 0x53,
	0x41, 0x10, 0x33, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x50, 0x50, 0x53, 0x56, 0x43, 0x5f, 0x4c, 0x53,
	0x41, 0x10, 0x3d, 0x42, 0x27, 0x5a, 0x25, 0x6e, 0x32, 0x78, 0x2e, 0x64, 0x65, 0x76, 0x2f, 0x78,
	0x2d, 0x61, 0x70, 0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_n2x_protobuf_network_v1_routing_lsa_proto_rawDescOnce sync.Once
	file_n2x_protobuf_network_v1_routing_lsa_proto_rawDescData = file_n2x_protobuf_network_v1_routing_lsa_proto_rawDesc
)

func file_n2x_protobuf_network_v1_routing_lsa_proto_rawDescGZIP() []byte {
	file_n2x_protobuf_network_v1_routing_lsa_proto_rawDescOnce.Do(func() {
		file_n2x_protobuf_network_v1_routing_lsa_proto_rawDescData = protoimpl.X.CompressGZIP(file_n2x_protobuf_network_v1_routing_lsa_proto_rawDescData)
	})
	return file_n2x_protobuf_network_v1_routing_lsa_proto_rawDescData
}

var file_n2x_protobuf_network_v1_routing_lsa_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_n2x_protobuf_network_v1_routing_lsa_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_n2x_protobuf_network_v1_routing_lsa_proto_goTypes = []any{
	(LSAType)(0),             // 0: routing.LSAType
	(*Status)(nil),           // 1: routing.Status
	(*LSA)(nil),              // 2: routing.LSA
	(*NodeLSA)(nil),          // 3: routing.NodeLSA
	(*IPAddr)(nil),           // 4: routing.IPAddr
	(*RoutingScopeLSA)(nil),  // 5: routing.RoutingScopeLSA
	(*NetworkPolicyLSA)(nil), // 6: routing.NetworkPolicyLSA
	(*RouterLSA)(nil),        // 7: routing.RouterLSA
	(*ProxyLSA)(nil),         // 8: routing.ProxyLSA
	(*AppSvcLSA)(nil),        // 9: routing.AppSvcLSA
	nil,                      // 10: routing.NodeLSA.EndpointsEntry
	(*topology.Policy)(nil),  // 11: topology.Policy
	(*topology.AppSvc)(nil),  // 12: topology.AppSvc
}
var file_n2x_protobuf_network_v1_routing_lsa_proto_depIdxs = []int32{
	0,  // 0: routing.LSA.type:type_name -> routing.LSAType
	3,  // 1: routing.LSA.nodeLSA:type_name -> routing.NodeLSA
	5,  // 2: routing.LSA.routingScopeLSA:type_name -> routing.RoutingScopeLSA
	6,  // 3: routing.LSA.networkPolicyLSA:type_name -> routing.NetworkPolicyLSA
	7,  // 4: routing.LSA.routerLSA:type_name -> routing.RouterLSA
	8,  // 5: routing.LSA.proxyLSA:type_name -> routing.ProxyLSA
	9,  // 6: routing.LSA.appSvcLSA:type_name -> routing.AppSvcLSA
	10, // 7: routing.NodeLSA.endpoints:type_name -> routing.NodeLSA.EndpointsEntry
	11, // 8: routing.NetworkPolicyLSA.policy:type_name -> topology.Policy
	12, // 9: routing.AppSvcLSA.appSvc:type_name -> topology.AppSvc
	4,  // 10: routing.NodeLSA.EndpointsEntry.value:type_name -> routing.IPAddr
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_n2x_protobuf_network_v1_routing_lsa_proto_init() }
func file_n2x_protobuf_network_v1_routing_lsa_proto_init() {
	if File_n2x_protobuf_network_v1_routing_lsa_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_n2x_protobuf_network_v1_routing_lsa_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_network_v1_routing_lsa_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*LSA); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_network_v1_routing_lsa_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*NodeLSA); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_network_v1_routing_lsa_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*IPAddr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_network_v1_routing_lsa_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*RoutingScopeLSA); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_network_v1_routing_lsa_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*NetworkPolicyLSA); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_network_v1_routing_lsa_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*RouterLSA); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_network_v1_routing_lsa_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ProxyLSA); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_network_v1_routing_lsa_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*AppSvcLSA); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_n2x_protobuf_network_v1_routing_lsa_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_n2x_protobuf_network_v1_routing_lsa_proto_goTypes,
		DependencyIndexes: file_n2x_protobuf_network_v1_routing_lsa_proto_depIdxs,
		EnumInfos:         file_n2x_protobuf_network_v1_routing_lsa_proto_enumTypes,
		MessageInfos:      file_n2x_protobuf_network_v1_routing_lsa_proto_msgTypes,
	}.Build()
	File_n2x_protobuf_network_v1_routing_lsa_proto = out.File
	file_n2x_protobuf_network_v1_routing_lsa_proto_rawDesc = nil
	file_n2x_protobuf_network_v1_routing_lsa_proto_goTypes = nil
	file_n2x_protobuf_network_v1_routing_lsa_proto_depIdxs = nil
}
