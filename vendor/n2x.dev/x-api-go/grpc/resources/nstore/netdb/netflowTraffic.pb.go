// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0--rc1
// source: n2x/protobuf/resources/v1/nstore/netdb/netflowTraffic.proto

package netdb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	nstore "n2x.dev/x-api-go/grpc/resources/nstore"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TrafficQueryType int32

const (
	TrafficQueryType_UNKNOWN_QUERY             TrafficQueryType = 0
	TrafficQueryType_TRAFFIC_BY_PROTOCOL       TrafficQueryType = 11
	TrafficQueryType_TRAFFIC_BY_L5_PORT        TrafficQueryType = 21
	TrafficQueryType_TRAFFIC_BY_DIRECTION      TrafficQueryType = 31
	TrafficQueryType_TRAFFIC_BY_ADDRESS_FAMILY TrafficQueryType = 41
	TrafficQueryType_TRAFFIC_TOP_TALKERS       TrafficQueryType = 101
)

// Enum value maps for TrafficQueryType.
var (
	TrafficQueryType_name = map[int32]string{
		0:   "UNKNOWN_QUERY",
		11:  "TRAFFIC_BY_PROTOCOL",
		21:  "TRAFFIC_BY_L5_PORT",
		31:  "TRAFFIC_BY_DIRECTION",
		41:  "TRAFFIC_BY_ADDRESS_FAMILY",
		101: "TRAFFIC_TOP_TALKERS",
	}
	TrafficQueryType_value = map[string]int32{
		"UNKNOWN_QUERY":             0,
		"TRAFFIC_BY_PROTOCOL":       11,
		"TRAFFIC_BY_L5_PORT":        21,
		"TRAFFIC_BY_DIRECTION":      31,
		"TRAFFIC_BY_ADDRESS_FAMILY": 41,
		"TRAFFIC_TOP_TALKERS":       101,
	}
)

func (x TrafficQueryType) Enum() *TrafficQueryType {
	p := new(TrafficQueryType)
	*p = x
	return p
}

func (x TrafficQueryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TrafficQueryType) Descriptor() protoreflect.EnumDescriptor {
	return file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_enumTypes[0].Descriptor()
}

func (TrafficQueryType) Type() protoreflect.EnumType {
	return &file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_enumTypes[0]
}

func (x TrafficQueryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TrafficQueryType.Descriptor instead.
func (TrafficQueryType) EnumDescriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_rawDescGZIP(), []int{0}
}

type L5Port int32

const (
	L5Port_OTHER_L5PORT L5Port = 0
	L5Port_HTTP         L5Port = 11
	L5Port_HTTPS        L5Port = 12
	L5Port_SSH          L5Port = 21
	L5Port_RDP          L5Port = 31
	L5Port_SMB          L5Port = 41
)

// Enum value maps for L5Port.
var (
	L5Port_name = map[int32]string{
		0:  "OTHER_L5PORT",
		11: "HTTP",
		12: "HTTPS",
		21: "SSH",
		31: "RDP",
		41: "SMB",
	}
	L5Port_value = map[string]int32{
		"OTHER_L5PORT": 0,
		"HTTP":         11,
		"HTTPS":        12,
		"SSH":          21,
		"RDP":          31,
		"SMB":          41,
	}
)

func (x L5Port) Enum() *L5Port {
	p := new(L5Port)
	*p = x
	return p
}

func (x L5Port) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (L5Port) Descriptor() protoreflect.EnumDescriptor {
	return file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_enumTypes[1].Descriptor()
}

func (L5Port) Type() protoreflect.EnumType {
	return &file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_enumTypes[1]
}

func (x L5Port) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use L5Port.Descriptor instead.
func (L5Port) EnumDescriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_rawDescGZIP(), []int{1}
}

type NetFlowEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64           `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Flow      *Flow           `protobuf:"bytes,21,opt,name=flow,proto3" json:"flow,omitempty"`         // key
	Traffic   *TrafficCounter `protobuf:"bytes,1001,opt,name=traffic,proto3" json:"traffic,omitempty"` // value
}

func (x *NetFlowEntry) Reset() {
	*x = NetFlowEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetFlowEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetFlowEntry) ProtoMessage() {}

func (x *NetFlowEntry) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetFlowEntry.ProtoReflect.Descriptor instead.
func (*NetFlowEntry) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_rawDescGZIP(), []int{0}
}

func (x *NetFlowEntry) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *NetFlowEntry) GetFlow() *Flow {
	if x != nil {
		return x.Flow
	}
	return nil
}

func (x *NetFlowEntry) GetTraffic() *TrafficCounter {
	if x != nil {
		return x.Traffic
	}
	return nil
}

type TrafficMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *nstore.DataRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	Type    TrafficQueryType    `protobuf:"varint,11,opt,name=type,proto3,enum=netdb.TrafficQueryType" json:"type,omitempty"`
}

func (x *TrafficMetricsRequest) Reset() {
	*x = TrafficMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrafficMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficMetricsRequest) ProtoMessage() {}

func (x *TrafficMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficMetricsRequest.ProtoReflect.Descriptor instead.
func (*TrafficMetricsRequest) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_rawDescGZIP(), []int{1}
}

func (x *TrafficMetricsRequest) GetRequest() *nstore.DataRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *TrafficMetricsRequest) GetType() TrafficQueryType {
	if x != nil {
		return x.Type
	}
	return TrafficQueryType_UNKNOWN_QUERY
}

type TrafficMetricsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID       string                    `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	TenantID        string                    `protobuf:"bytes,2,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	NodeID          string                    `protobuf:"bytes,5,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	QueryID         string                    `protobuf:"bytes,11,opt,name=queryID,proto3" json:"queryID,omitempty"`
	ByProtocol      []*TrafficByProtocol      `protobuf:"bytes,101,rep,name=byProtocol,proto3" json:"byProtocol,omitempty"`
	ByL5Port        []*TrafficByL5Port        `protobuf:"bytes,111,rep,name=byL5Port,proto3" json:"byL5Port,omitempty"`
	ByDirection     []*TrafficByDirection     `protobuf:"bytes,121,rep,name=byDirection,proto3" json:"byDirection,omitempty"`
	ByAddressFamily []*TrafficByAddressFamily `protobuf:"bytes,131,rep,name=byAddressFamily,proto3" json:"byAddressFamily,omitempty"`
	TopTalkers      *TopTalkers               `protobuf:"bytes,501,opt,name=topTalkers,proto3" json:"topTalkers,omitempty"`
	Timestamp       int64                     `protobuf:"varint,1001,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *TrafficMetricsResponse) Reset() {
	*x = TrafficMetricsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrafficMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficMetricsResponse) ProtoMessage() {}

func (x *TrafficMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficMetricsResponse.ProtoReflect.Descriptor instead.
func (*TrafficMetricsResponse) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_rawDescGZIP(), []int{2}
}

func (x *TrafficMetricsResponse) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *TrafficMetricsResponse) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

func (x *TrafficMetricsResponse) GetNodeID() string {
	if x != nil {
		return x.NodeID
	}
	return ""
}

func (x *TrafficMetricsResponse) GetQueryID() string {
	if x != nil {
		return x.QueryID
	}
	return ""
}

func (x *TrafficMetricsResponse) GetByProtocol() []*TrafficByProtocol {
	if x != nil {
		return x.ByProtocol
	}
	return nil
}

func (x *TrafficMetricsResponse) GetByL5Port() []*TrafficByL5Port {
	if x != nil {
		return x.ByL5Port
	}
	return nil
}

func (x *TrafficMetricsResponse) GetByDirection() []*TrafficByDirection {
	if x != nil {
		return x.ByDirection
	}
	return nil
}

func (x *TrafficMetricsResponse) GetByAddressFamily() []*TrafficByAddressFamily {
	if x != nil {
		return x.ByAddressFamily
	}
	return nil
}

func (x *TrafficMetricsResponse) GetTopTalkers() *TopTalkers {
	if x != nil {
		return x.TopTalkers
	}
	return nil
}

func (x *TrafficMetricsResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type TrafficByProtocol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64                      `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Traffic   map[string]*TrafficCounter `protobuf:"bytes,11,rep,name=traffic,proto3" json:"traffic,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // map[Prococol]*TrafficCounter
}

func (x *TrafficByProtocol) Reset() {
	*x = TrafficByProtocol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrafficByProtocol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficByProtocol) ProtoMessage() {}

func (x *TrafficByProtocol) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficByProtocol.ProtoReflect.Descriptor instead.
func (*TrafficByProtocol) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_rawDescGZIP(), []int{3}
}

func (x *TrafficByProtocol) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TrafficByProtocol) GetTraffic() map[string]*TrafficCounter {
	if x != nil {
		return x.Traffic
	}
	return nil
}

type TrafficByL5Port struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64                      `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Traffic   map[string]*TrafficCounter `protobuf:"bytes,11,rep,name=traffic,proto3" json:"traffic,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // map[L5Port]*TrafficCounter
}

func (x *TrafficByL5Port) Reset() {
	*x = TrafficByL5Port{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrafficByL5Port) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficByL5Port) ProtoMessage() {}

func (x *TrafficByL5Port) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficByL5Port.ProtoReflect.Descriptor instead.
func (*TrafficByL5Port) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_rawDescGZIP(), []int{4}
}

func (x *TrafficByL5Port) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TrafficByL5Port) GetTraffic() map[string]*TrafficCounter {
	if x != nil {
		return x.Traffic
	}
	return nil
}

type TrafficByDirection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64                      `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Traffic   map[string]*TrafficCounter `protobuf:"bytes,11,rep,name=traffic,proto3" json:"traffic,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // map[ConnectionDirection]*TrafficCounter
}

func (x *TrafficByDirection) Reset() {
	*x = TrafficByDirection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrafficByDirection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficByDirection) ProtoMessage() {}

func (x *TrafficByDirection) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficByDirection.ProtoReflect.Descriptor instead.
func (*TrafficByDirection) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_rawDescGZIP(), []int{5}
}

func (x *TrafficByDirection) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TrafficByDirection) GetTraffic() map[string]*TrafficCounter {
	if x != nil {
		return x.Traffic
	}
	return nil
}

type TrafficByAddressFamily struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64                      `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Traffic   map[string]*TrafficCounter `protobuf:"bytes,11,rep,name=traffic,proto3" json:"traffic,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // map[AddressFamily]*TrafficCounter
}

func (x *TrafficByAddressFamily) Reset() {
	*x = TrafficByAddressFamily{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrafficByAddressFamily) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficByAddressFamily) ProtoMessage() {}

func (x *TrafficByAddressFamily) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficByAddressFamily.ProtoReflect.Descriptor instead.
func (*TrafficByAddressFamily) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_rawDescGZIP(), []int{6}
}

func (x *TrafficByAddressFamily) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TrafficByAddressFamily) GetTraffic() map[string]*TrafficCounter {
	if x != nil {
		return x.Traffic
	}
	return nil
}

type TopTalkers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Src []*Talker `protobuf:"bytes,11,rep,name=src,proto3" json:"src,omitempty"`
	Dst []*Talker `protobuf:"bytes,21,rep,name=dst,proto3" json:"dst,omitempty"`
}

func (x *TopTalkers) Reset() {
	*x = TopTalkers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopTalkers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopTalkers) ProtoMessage() {}

func (x *TopTalkers) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopTalkers.ProtoReflect.Descriptor instead.
func (*TopTalkers) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_rawDescGZIP(), []int{7}
}

func (x *TopTalkers) GetSrc() []*Talker {
	if x != nil {
		return x.Src
	}
	return nil
}

func (x *TopTalkers) GetDst() []*Talker {
	if x != nil {
		return x.Dst
	}
	return nil
}

type Talker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr  string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Bytes uint64 `protobuf:"varint,11,opt,name=bytes,proto3" json:"bytes,omitempty"`
}

func (x *Talker) Reset() {
	*x = Talker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Talker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Talker) ProtoMessage() {}

func (x *Talker) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Talker.ProtoReflect.Descriptor instead.
func (*Talker) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_rawDescGZIP(), []int{8}
}

func (x *Talker) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Talker) GetBytes() uint64 {
	if x != nil {
		return x.Bytes
	}
	return 0
}

var File_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto protoreflect.FileDescriptor

var file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_rawDesc = []byte{
	0x0a, 0x3b, 0x6e, 0x32, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2f, 0x6e, 0x65, 0x74, 0x64, 0x62, 0x2f, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x6f, 0x77,
	0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6e,
	0x65, 0x74, 0x64, 0x62, 0x1a, 0x37, 0x6e, 0x32, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f,
	0x6e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x6e, 0x65, 0x74, 0x64, 0x62, 0x2f, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x6e,
	0x32, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f,
	0x6e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7f, 0x0a, 0x0c,
	0x4e, 0x65, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1f, 0x0a, 0x04, 0x66, 0x6c,
	0x6f, 0x77, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6e, 0x65, 0x74, 0x64, 0x62,
	0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x04, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x30, 0x0a, 0x07, 0x74,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x6e, 0x65, 0x74, 0x64, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x52, 0x07, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x22, 0x73, 0x0a,
	0x15, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6e, 0x65, 0x74, 0x64, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x22, 0xcc, 0x03, 0x0a, 0x16, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x0a, 0x62, 0x79, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x6e, 0x65, 0x74, 0x64, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x42, 0x79, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x0a, 0x62, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x12, 0x32, 0x0a, 0x08, 0x62, 0x79, 0x4c, 0x35, 0x50, 0x6f, 0x72, 0x74, 0x18,
	0x6f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x65, 0x74, 0x64, 0x62, 0x2e, 0x54, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x63, 0x42, 0x79, 0x4c, 0x35, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x08, 0x62,
	0x79, 0x4c, 0x35, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x62, 0x79, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x79, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6e,
	0x65, 0x74, 0x64, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x42, 0x79, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x62, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x0f, 0x62, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x83, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x6e, 0x65, 0x74, 0x64, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x42, 0x79,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x52, 0x0f, 0x62,
	0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x32,
	0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x54, 0x61, 0x6c, 0x6b, 0x65, 0x72, 0x73, 0x18, 0xf5, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6e, 0x65, 0x74, 0x64, 0x62, 0x2e, 0x54, 0x6f, 0x70, 0x54,
	0x61, 0x6c, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x0a, 0x74, 0x6f, 0x70, 0x54, 0x61, 0x6c, 0x6b, 0x65,
	0x72, 0x73, 0x12, 0x1d, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0xe9, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x22, 0xc5, 0x01, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x42, 0x79, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x3f, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x65, 0x74, 0x64, 0x62, 0x2e, 0x54,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x74,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x1a, 0x51, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e, 0x65, 0x74, 0x64, 0x62, 0x2e,
	0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc1, 0x01, 0x0a, 0x0f, 0x54, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x63, 0x42, 0x79, 0x4c, 0x35, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x3d, 0x0a, 0x07, 0x74,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6e,
	0x65, 0x74, 0x64, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x42, 0x79, 0x4c, 0x35,
	0x50, 0x6f, 0x72, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x1a, 0x51, 0x0a, 0x0c, 0x54, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x63, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e, 0x65,
	0x74, 0x64, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc7, 0x01,
	0x0a, 0x12, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x42, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x40, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6e, 0x65, 0x74, 0x64, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x42, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x74, 0x72, 0x61,
	0x66, 0x66, 0x69, 0x63, 0x1a, 0x51, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e, 0x65, 0x74, 0x64, 0x62, 0x2e, 0x54, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xcf, 0x01, 0x0a, 0x16, 0x54, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x61, 0x6d, 0x69,
	0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x44, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x6e, 0x65, 0x74, 0x64, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x42, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79,
	0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x74,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x1a, 0x51, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e, 0x65, 0x74, 0x64, 0x62, 0x2e,
	0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4e, 0x0a, 0x0a, 0x54, 0x6f, 0x70,
	0x54, 0x61, 0x6c, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6e, 0x65, 0x74, 0x64, 0x62, 0x2e, 0x54, 0x61, 0x6c,
	0x6b, 0x65, 0x72, 0x52, 0x03, 0x73, 0x72, 0x63, 0x12, 0x1f, 0x0a, 0x03, 0x64, 0x73, 0x74, 0x18,
	0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6e, 0x65, 0x74, 0x64, 0x62, 0x2e, 0x54, 0x61,
	0x6c, 0x6b, 0x65, 0x72, 0x52, 0x03, 0x64, 0x73, 0x74, 0x22, 0x32, 0x0a, 0x06, 0x54, 0x61, 0x6c,
	0x6b, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x2a, 0xa8, 0x01,
	0x0a, 0x10, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x51, 0x55,
	0x45, 0x52, 0x59, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x52, 0x41, 0x46, 0x46, 0x49, 0x43,
	0x5f, 0x42, 0x59, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x10, 0x0b, 0x12, 0x16,
	0x0a, 0x12, 0x54, 0x52, 0x41, 0x46, 0x46, 0x49, 0x43, 0x5f, 0x42, 0x59, 0x5f, 0x4c, 0x35, 0x5f,
	0x50, 0x4f, 0x52, 0x54, 0x10, 0x15, 0x12, 0x18, 0x0a, 0x14, 0x54, 0x52, 0x41, 0x46, 0x46, 0x49,
	0x43, 0x5f, 0x42, 0x59, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x1f,
	0x12, 0x1d, 0x0a, 0x19, 0x54, 0x52, 0x41, 0x46, 0x46, 0x49, 0x43, 0x5f, 0x42, 0x59, 0x5f, 0x41,
	0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x46, 0x41, 0x4d, 0x49, 0x4c, 0x59, 0x10, 0x29, 0x12,
	0x17, 0x0a, 0x13, 0x54, 0x52, 0x41, 0x46, 0x46, 0x49, 0x43, 0x5f, 0x54, 0x4f, 0x50, 0x5f, 0x54,
	0x41, 0x4c, 0x4b, 0x45, 0x52, 0x53, 0x10, 0x65, 0x2a, 0x4a, 0x0a, 0x06, 0x4c, 0x35, 0x50, 0x6f,
	0x72, 0x74, 0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x4c, 0x35, 0x50, 0x4f,
	0x52, 0x54, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x54, 0x54, 0x50, 0x10, 0x0b, 0x12, 0x09,
	0x0a, 0x05, 0x48, 0x54, 0x54, 0x50, 0x53, 0x10, 0x0c, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x53, 0x48,
	0x10, 0x15, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x44, 0x50, 0x10, 0x1f, 0x12, 0x07, 0x0a, 0x03, 0x53,
	0x4d, 0x42, 0x10, 0x29, 0x42, 0x2e, 0x5a, 0x2c, 0x6e, 0x32, 0x78, 0x2e, 0x64, 0x65, 0x76, 0x2f,
	0x78, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x6e,
	0x65, 0x74, 0x64, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_rawDescOnce sync.Once
	file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_rawDescData = file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_rawDesc
)

func file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_rawDescGZIP() []byte {
	file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_rawDescOnce.Do(func() {
		file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_rawDescData = protoimpl.X.CompressGZIP(file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_rawDescData)
	})
	return file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_rawDescData
}

var file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_goTypes = []any{
	(TrafficQueryType)(0),          // 0: netdb.TrafficQueryType
	(L5Port)(0),                    // 1: netdb.L5Port
	(*NetFlowEntry)(nil),           // 2: netdb.NetFlowEntry
	(*TrafficMetricsRequest)(nil),  // 3: netdb.TrafficMetricsRequest
	(*TrafficMetricsResponse)(nil), // 4: netdb.TrafficMetricsResponse
	(*TrafficByProtocol)(nil),      // 5: netdb.TrafficByProtocol
	(*TrafficByL5Port)(nil),        // 6: netdb.TrafficByL5Port
	(*TrafficByDirection)(nil),     // 7: netdb.TrafficByDirection
	(*TrafficByAddressFamily)(nil), // 8: netdb.TrafficByAddressFamily
	(*TopTalkers)(nil),             // 9: netdb.TopTalkers
	(*Talker)(nil),                 // 10: netdb.Talker
	nil,                            // 11: netdb.TrafficByProtocol.TrafficEntry
	nil,                            // 12: netdb.TrafficByL5Port.TrafficEntry
	nil,                            // 13: netdb.TrafficByDirection.TrafficEntry
	nil,                            // 14: netdb.TrafficByAddressFamily.TrafficEntry
	(*Flow)(nil),                   // 15: netdb.Flow
	(*TrafficCounter)(nil),         // 16: netdb.TrafficCounter
	(*nstore.DataRequest)(nil),     // 17: nstore.DataRequest
}
var file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_depIdxs = []int32{
	15, // 0: netdb.NetFlowEntry.flow:type_name -> netdb.Flow
	16, // 1: netdb.NetFlowEntry.traffic:type_name -> netdb.TrafficCounter
	17, // 2: netdb.TrafficMetricsRequest.request:type_name -> nstore.DataRequest
	0,  // 3: netdb.TrafficMetricsRequest.type:type_name -> netdb.TrafficQueryType
	5,  // 4: netdb.TrafficMetricsResponse.byProtocol:type_name -> netdb.TrafficByProtocol
	6,  // 5: netdb.TrafficMetricsResponse.byL5Port:type_name -> netdb.TrafficByL5Port
	7,  // 6: netdb.TrafficMetricsResponse.byDirection:type_name -> netdb.TrafficByDirection
	8,  // 7: netdb.TrafficMetricsResponse.byAddressFamily:type_name -> netdb.TrafficByAddressFamily
	9,  // 8: netdb.TrafficMetricsResponse.topTalkers:type_name -> netdb.TopTalkers
	11, // 9: netdb.TrafficByProtocol.traffic:type_name -> netdb.TrafficByProtocol.TrafficEntry
	12, // 10: netdb.TrafficByL5Port.traffic:type_name -> netdb.TrafficByL5Port.TrafficEntry
	13, // 11: netdb.TrafficByDirection.traffic:type_name -> netdb.TrafficByDirection.TrafficEntry
	14, // 12: netdb.TrafficByAddressFamily.traffic:type_name -> netdb.TrafficByAddressFamily.TrafficEntry
	10, // 13: netdb.TopTalkers.src:type_name -> netdb.Talker
	10, // 14: netdb.TopTalkers.dst:type_name -> netdb.Talker
	16, // 15: netdb.TrafficByProtocol.TrafficEntry.value:type_name -> netdb.TrafficCounter
	16, // 16: netdb.TrafficByL5Port.TrafficEntry.value:type_name -> netdb.TrafficCounter
	16, // 17: netdb.TrafficByDirection.TrafficEntry.value:type_name -> netdb.TrafficCounter
	16, // 18: netdb.TrafficByAddressFamily.TrafficEntry.value:type_name -> netdb.TrafficCounter
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_init() }
func file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_init() {
	if File_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto != nil {
		return
	}
	file_n2x_protobuf_resources_v1_nstore_netdb_connection_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*NetFlowEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*TrafficMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*TrafficMetricsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*TrafficByProtocol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*TrafficByL5Port); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*TrafficByDirection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*TrafficByAddressFamily); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*TopTalkers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*Talker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_goTypes,
		DependencyIndexes: file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_depIdxs,
		EnumInfos:         file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_enumTypes,
		MessageInfos:      file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_msgTypes,
	}.Build()
	File_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto = out.File
	file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_rawDesc = nil
	file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_goTypes = nil
	file_n2x_protobuf_resources_v1_nstore_netdb_netflowTraffic_proto_depIdxs = nil
}
