// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0--rc1
// source: n2x/protobuf/resources/v1/topology/topology.proto

package topology

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TopologyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID string `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	TenantID  string `protobuf:"bytes,11,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
}

func (x *TopologyRequest) Reset() {
	*x = TopologyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopologyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyRequest) ProtoMessage() {}

func (x *TopologyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologyRequest.ProtoReflect.Descriptor instead.
func (*TopologyRequest) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{0}
}

func (x *TopologyRequest) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *TopologyRequest) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

type TopologyTags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags []string `protobuf:"bytes,1000,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *TopologyTags) Reset() {
	*x = TopologyTags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopologyTags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyTags) ProtoMessage() {}

func (x *TopologyTags) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologyTags.ProtoReflect.Descriptor instead.
func (*TopologyTags) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{1}
}

func (x *TopologyTags) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type TopologyNetworkListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID string `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	TenantID  string `protobuf:"bytes,2,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
}

func (x *TopologyNetworkListRequest) Reset() {
	*x = TopologyNetworkListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopologyNetworkListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyNetworkListRequest) ProtoMessage() {}

func (x *TopologyNetworkListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologyNetworkListRequest.ProtoReflect.Descriptor instead.
func (*TopologyNetworkListRequest) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{2}
}

func (x *TopologyNetworkListRequest) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *TopologyNetworkListRequest) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

type TopologyNetworkList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Networks []*Network `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`
}

func (x *TopologyNetworkList) Reset() {
	*x = TopologyNetworkList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopologyNetworkList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyNetworkList) ProtoMessage() {}

func (x *TopologyNetworkList) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologyNetworkList.ProtoReflect.Descriptor instead.
func (*TopologyNetworkList) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{3}
}

func (x *TopologyNetworkList) GetNetworks() []*Network {
	if x != nil {
		return x.Networks
	}
	return nil
}

type TopologySubnetListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID string `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	TenantID  string `protobuf:"bytes,2,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	NetID     string `protobuf:"bytes,3,opt,name=netID,proto3" json:"netID,omitempty"`
}

func (x *TopologySubnetListRequest) Reset() {
	*x = TopologySubnetListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopologySubnetListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologySubnetListRequest) ProtoMessage() {}

func (x *TopologySubnetListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologySubnetListRequest.ProtoReflect.Descriptor instead.
func (*TopologySubnetListRequest) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{4}
}

func (x *TopologySubnetListRequest) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *TopologySubnetListRequest) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

func (x *TopologySubnetListRequest) GetNetID() string {
	if x != nil {
		return x.NetID
	}
	return ""
}

type TopologySubnetList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subnets []*Subnet `protobuf:"bytes,1,rep,name=subnets,proto3" json:"subnets,omitempty"`
}

func (x *TopologySubnetList) Reset() {
	*x = TopologySubnetList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopologySubnetList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologySubnetList) ProtoMessage() {}

func (x *TopologySubnetList) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologySubnetList.ProtoReflect.Descriptor instead.
func (*TopologySubnetList) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{5}
}

func (x *TopologySubnetList) GetSubnets() []*Subnet {
	if x != nil {
		return x.Subnets
	}
	return nil
}

type TopologyNodeListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID string      `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	TenantID  string      `protobuf:"bytes,2,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	Filter    *NodeFilter `protobuf:"bytes,101,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *TopologyNodeListRequest) Reset() {
	*x = TopologyNodeListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopologyNodeListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyNodeListRequest) ProtoMessage() {}

func (x *TopologyNodeListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologyNodeListRequest.ProtoReflect.Descriptor instead.
func (*TopologyNodeListRequest) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{6}
}

func (x *TopologyNodeListRequest) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *TopologyNodeListRequest) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

func (x *TopologyNodeListRequest) GetFilter() *NodeFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type TopologyNodeList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*TopologyNode `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *TopologyNodeList) Reset() {
	*x = TopologyNodeList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopologyNodeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyNodeList) ProtoMessage() {}

func (x *TopologyNodeList) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologyNodeList.ProtoReflect.Descriptor instead.
func (*TopologyNodeList) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{7}
}

func (x *TopologyNodeList) GetNodes() []*TopologyNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type TopologyNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node      *Node        `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Endpoints []*Endpoint  `protobuf:"bytes,11,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	Online    bool         `protobuf:"varint,101,opt,name=online,proto3" json:"online,omitempty"`
	Alerts    *StatsAlerts `protobuf:"bytes,111,opt,name=alerts,proto3" json:"alerts,omitempty"`
}

func (x *TopologyNode) Reset() {
	*x = TopologyNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopologyNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyNode) ProtoMessage() {}

func (x *TopologyNode) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologyNode.ProtoReflect.Descriptor instead.
func (*TopologyNode) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{8}
}

func (x *TopologyNode) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *TopologyNode) GetEndpoints() []*Endpoint {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *TopologyNode) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

func (x *TopologyNode) GetAlerts() *StatsAlerts {
	if x != nil {
		return x.Alerts
	}
	return nil
}

type TopologyVSListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID string `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	TenantID  string `protobuf:"bytes,2,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	NetID     string `protobuf:"bytes,3,opt,name=netID,proto3" json:"netID,omitempty"`
}

func (x *TopologyVSListRequest) Reset() {
	*x = TopologyVSListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopologyVSListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyVSListRequest) ProtoMessage() {}

func (x *TopologyVSListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologyVSListRequest.ProtoReflect.Descriptor instead.
func (*TopologyVSListRequest) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{9}
}

func (x *TopologyVSListRequest) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *TopologyVSListRequest) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

func (x *TopologyVSListRequest) GetNetID() string {
	if x != nil {
		return x.NetID
	}
	return ""
}

type TopologyVSList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VSs []*VS `protobuf:"bytes,1,rep,name=VSs,proto3" json:"VSs,omitempty"`
}

func (x *TopologyVSList) Reset() {
	*x = TopologyVSList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopologyVSList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyVSList) ProtoMessage() {}

func (x *TopologyVSList) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologyVSList.ProtoReflect.Descriptor instead.
func (*TopologyVSList) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{10}
}

func (x *TopologyVSList) GetVSs() []*VS {
	if x != nil {
		return x.VSs
	}
	return nil
}

type NodeSummaryMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes map[string]*NodeSummary `protobuf:"bytes,11,rep,name=nodes,proto3" json:"nodes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // map[nodeID]*NodeSummary
}

func (x *NodeSummaryMap) Reset() {
	*x = NodeSummaryMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeSummaryMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeSummaryMap) ProtoMessage() {}

func (x *NodeSummaryMap) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeSummaryMap.ProtoReflect.Descriptor instead.
func (*NodeSummaryMap) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{11}
}

func (x *NodeSummaryMap) GetNodes() map[string]*NodeSummary {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type NodeSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID          string `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	TenantID           string `protobuf:"bytes,11,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	TenantName         string `protobuf:"bytes,12,opt,name=tenantName,proto3" json:"tenantName,omitempty"`
	TenantDescription  string `protobuf:"bytes,13,opt,name=tenantDescription,proto3" json:"tenantDescription,omitempty"`
	NetID              string `protobuf:"bytes,21,opt,name=netID,proto3" json:"netID,omitempty"`
	NetworkDescription string `protobuf:"bytes,22,opt,name=networkDescription,proto3" json:"networkDescription,omitempty"`
	NetworkCIDR        string `protobuf:"bytes,23,opt,name=networkCIDR,proto3" json:"networkCIDR,omitempty"`
	NetworkLocationID  string `protobuf:"bytes,24,opt,name=networkLocationID,proto3" json:"networkLocationID,omitempty"`
	SubnetID           string `protobuf:"bytes,31,opt,name=subnetID,proto3" json:"subnetID,omitempty"`
	SubnetDescription  string `protobuf:"bytes,32,opt,name=subnetDescription,proto3" json:"subnetDescription,omitempty"`
	SubnetCIDR         string `protobuf:"bytes,33,opt,name=subnetCIDR,proto3" json:"subnetCIDR,omitempty"`
	NodeID             string `protobuf:"bytes,41,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	NodeName           string `protobuf:"bytes,42,opt,name=nodeName,proto3" json:"nodeName,omitempty"`
	NodeDescription    string `protobuf:"bytes,43,opt,name=nodeDescription,proto3" json:"nodeDescription,omitempty"`
	NodeCanRelay       bool   `protobuf:"varint,47,opt,name=nodeCanRelay,proto3" json:"nodeCanRelay,omitempty"`
	NodeKubernetesGw   bool   `protobuf:"varint,48,opt,name=nodeKubernetesGw,proto3" json:"nodeKubernetesGw,omitempty"`
	NodeOffline        bool   `protobuf:"varint,49,opt,name=nodeOffline,proto3" json:"nodeOffline,omitempty"`
}

func (x *NodeSummary) Reset() {
	*x = NodeSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeSummary) ProtoMessage() {}

func (x *NodeSummary) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeSummary.ProtoReflect.Descriptor instead.
func (*NodeSummary) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_topology_topology_proto_rawDescGZIP(), []int{12}
}

func (x *NodeSummary) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *NodeSummary) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

func (x *NodeSummary) GetTenantName() string {
	if x != nil {
		return x.TenantName
	}
	return ""
}

func (x *NodeSummary) GetTenantDescription() string {
	if x != nil {
		return x.TenantDescription
	}
	return ""
}

func (x *NodeSummary) GetNetID() string {
	if x != nil {
		return x.NetID
	}
	return ""
}

func (x *NodeSummary) GetNetworkDescription() string {
	if x != nil {
		return x.NetworkDescription
	}
	return ""
}

func (x *NodeSummary) GetNetworkCIDR() string {
	if x != nil {
		return x.NetworkCIDR
	}
	return ""
}

func (x *NodeSummary) GetNetworkLocationID() string {
	if x != nil {
		return x.NetworkLocationID
	}
	return ""
}

func (x *NodeSummary) GetSubnetID() string {
	if x != nil {
		return x.SubnetID
	}
	return ""
}

func (x *NodeSummary) GetSubnetDescription() string {
	if x != nil {
		return x.SubnetDescription
	}
	return ""
}

func (x *NodeSummary) GetSubnetCIDR() string {
	if x != nil {
		return x.SubnetCIDR
	}
	return ""
}

func (x *NodeSummary) GetNodeID() string {
	if x != nil {
		return x.NodeID
	}
	return ""
}

func (x *NodeSummary) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *NodeSummary) GetNodeDescription() string {
	if x != nil {
		return x.NodeDescription
	}
	return ""
}

func (x *NodeSummary) GetNodeCanRelay() bool {
	if x != nil {
		return x.NodeCanRelay
	}
	return false
}

func (x *NodeSummary) GetNodeKubernetesGw() bool {
	if x != nil {
		return x.NodeKubernetesGw
	}
	return false
}

func (x *NodeSummary) GetNodeOffline() bool {
	if x != nil {
		return x.NodeOffline
	}
	return false
}

var File_n2x_protobuf_resources_v1_topology_topology_proto protoreflect.FileDescriptor

var file_n2x_protobuf_resources_v1_topology_topology_proto_rawDesc = []byte{
	0x0a, 0x31, 0x6e, 0x32, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f, 0x70, 0x6f,
	0x6c, 0x6f, 0x67, 0x79, 0x2f, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x08, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x1a, 0x30, 0x6e,
	0x32, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67,
	0x79, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2f, 0x6e, 0x32, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f, 0x70, 0x6f, 0x6c,
	0x6f, 0x67, 0x79, 0x2f, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2d, 0x6e, 0x32, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f, 0x70, 0x6f,
	0x6c, 0x6f, 0x67, 0x79, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2b, 0x6e, 0x32, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f, 0x70, 0x6f, 0x6c,
	0x6f, 0x67, 0x79, 0x2f, 0x76, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x6e, 0x32,
	0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4b, 0x0a, 0x0f,
	0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x23, 0x0a, 0x0c, 0x54, 0x6f, 0x70,
	0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x54, 0x61, 0x67, 0x73, 0x12, 0x13, 0x0a, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x18, 0xe8, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x56,
	0x0a, 0x1a, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x44, 0x0a, 0x13, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f,
	0x67, 0x79, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x0a,
	0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x22, 0x6b, 0x0a, 0x19,
	0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x22, 0x40, 0x0a, 0x12, 0x54, 0x6f, 0x70,
	0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x2a, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x53, 0x75, 0x62, 0x6e,
	0x65, 0x74, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x17,
	0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x44, 0x12, 0x2c, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x65, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22,
	0x40, 0x0a, 0x10, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x54, 0x6f,
	0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x22, 0xab, 0x01, 0x0a, 0x0c, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x4e, 0x6f,
	0x64, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x6f, 0x70, 0x6f,
	0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x2d, 0x0a, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x22,
	0x67, 0x0a, 0x15, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x56, 0x53, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x22, 0x30, 0x0a, 0x0e, 0x54, 0x6f, 0x70, 0x6f,
	0x6c, 0x6f, 0x67, 0x79, 0x56, 0x53, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x03, 0x56, 0x53,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f,
	0x67, 0x79, 0x2e, 0x56, 0x53, 0x52, 0x03, 0x56, 0x53, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x0e, 0x4e,
	0x6f, 0x64, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x4d, 0x61, 0x70, 0x12, 0x39, 0x0a,
	0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74,
	0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x4d, 0x61, 0x70, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x1a, 0x4f, 0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f,
	0x67, 0x79, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe5, 0x04, 0x0a, 0x0b, 0x4e, 0x6f,
	0x64, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x12, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x43, 0x49, 0x44, 0x52, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x49, 0x44, 0x52, 0x12, 0x2c, 0x0a, 0x11, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65,
	0x74, 0x49, 0x44, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65,
	0x74, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x43, 0x49, 0x44, 0x52, 0x18,
	0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x43, 0x49, 0x44,
	0x52, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x29, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x64,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6e, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x6e, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x22, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x61, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x18,
	0x2f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x61, 0x6e, 0x52, 0x65,
	0x6c, 0x61, 0x79, 0x12, 0x2a, 0x0a, 0x10, 0x6e, 0x6f, 0x64, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x72,
	0x6e, 0x65, 0x74, 0x65, 0x73, 0x47, 0x77, 0x18, 0x30, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x6e,
	0x6f, 0x64, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x47, 0x77, 0x12,
	0x20, 0x0a, 0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x31,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x42, 0x2a, 0x5a, 0x28, 0x6e, 0x32, 0x78, 0x2e, 0x64, 0x65, 0x76, 0x2f, 0x78, 0x2d, 0x61,
	0x70, 0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2f, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_n2x_protobuf_resources_v1_topology_topology_proto_rawDescOnce sync.Once
	file_n2x_protobuf_resources_v1_topology_topology_proto_rawDescData = file_n2x_protobuf_resources_v1_topology_topology_proto_rawDesc
)

func file_n2x_protobuf_resources_v1_topology_topology_proto_rawDescGZIP() []byte {
	file_n2x_protobuf_resources_v1_topology_topology_proto_rawDescOnce.Do(func() {
		file_n2x_protobuf_resources_v1_topology_topology_proto_rawDescData = protoimpl.X.CompressGZIP(file_n2x_protobuf_resources_v1_topology_topology_proto_rawDescData)
	})
	return file_n2x_protobuf_resources_v1_topology_topology_proto_rawDescData
}

var file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_n2x_protobuf_resources_v1_topology_topology_proto_goTypes = []any{
	(*TopologyRequest)(nil),            // 0: topology.TopologyRequest
	(*TopologyTags)(nil),               // 1: topology.TopologyTags
	(*TopologyNetworkListRequest)(nil), // 2: topology.TopologyNetworkListRequest
	(*TopologyNetworkList)(nil),        // 3: topology.TopologyNetworkList
	(*TopologySubnetListRequest)(nil),  // 4: topology.TopologySubnetListRequest
	(*TopologySubnetList)(nil),         // 5: topology.TopologySubnetList
	(*TopologyNodeListRequest)(nil),    // 6: topology.TopologyNodeListRequest
	(*TopologyNodeList)(nil),           // 7: topology.TopologyNodeList
	(*TopologyNode)(nil),               // 8: topology.TopologyNode
	(*TopologyVSListRequest)(nil),      // 9: topology.TopologyVSListRequest
	(*TopologyVSList)(nil),             // 10: topology.TopologyVSList
	(*NodeSummaryMap)(nil),             // 11: topology.NodeSummaryMap
	(*NodeSummary)(nil),                // 12: topology.NodeSummary
	nil,                                // 13: topology.NodeSummaryMap.NodesEntry
	(*Network)(nil),                    // 14: topology.Network
	(*Subnet)(nil),                     // 15: topology.Subnet
	(*NodeFilter)(nil),                 // 16: topology.NodeFilter
	(*Node)(nil),                       // 17: topology.Node
	(*Endpoint)(nil),                   // 18: topology.Endpoint
	(*StatsAlerts)(nil),                // 19: topology.StatsAlerts
	(*VS)(nil),                         // 20: topology.VS
}
var file_n2x_protobuf_resources_v1_topology_topology_proto_depIdxs = []int32{
	14, // 0: topology.TopologyNetworkList.networks:type_name -> topology.Network
	15, // 1: topology.TopologySubnetList.subnets:type_name -> topology.Subnet
	16, // 2: topology.TopologyNodeListRequest.filter:type_name -> topology.NodeFilter
	8,  // 3: topology.TopologyNodeList.nodes:type_name -> topology.TopologyNode
	17, // 4: topology.TopologyNode.node:type_name -> topology.Node
	18, // 5: topology.TopologyNode.endpoints:type_name -> topology.Endpoint
	19, // 6: topology.TopologyNode.alerts:type_name -> topology.StatsAlerts
	20, // 7: topology.TopologyVSList.VSs:type_name -> topology.VS
	13, // 8: topology.NodeSummaryMap.nodes:type_name -> topology.NodeSummaryMap.NodesEntry
	12, // 9: topology.NodeSummaryMap.NodesEntry.value:type_name -> topology.NodeSummary
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_n2x_protobuf_resources_v1_topology_topology_proto_init() }
func file_n2x_protobuf_resources_v1_topology_topology_proto_init() {
	if File_n2x_protobuf_resources_v1_topology_topology_proto != nil {
		return
	}
	file_n2x_protobuf_resources_v1_topology_network_proto_init()
	file_n2x_protobuf_resources_v1_topology_subnet_proto_init()
	file_n2x_protobuf_resources_v1_topology_node_proto_init()
	file_n2x_protobuf_resources_v1_topology_vs_proto_init()
	file_n2x_protobuf_resources_v1_topology_stats_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*TopologyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*TopologyTags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*TopologyNetworkListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*TopologyNetworkList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*TopologySubnetListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*TopologySubnetList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*TopologyNodeListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*TopologyNodeList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*TopologyNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*TopologyVSListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*TopologyVSList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*NodeSummaryMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*NodeSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_n2x_protobuf_resources_v1_topology_topology_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_n2x_protobuf_resources_v1_topology_topology_proto_goTypes,
		DependencyIndexes: file_n2x_protobuf_resources_v1_topology_topology_proto_depIdxs,
		MessageInfos:      file_n2x_protobuf_resources_v1_topology_topology_proto_msgTypes,
	}.Build()
	File_n2x_protobuf_resources_v1_topology_topology_proto = out.File
	file_n2x_protobuf_resources_v1_topology_topology_proto_rawDesc = nil
	file_n2x_protobuf_resources_v1_topology_topology_proto_goTypes = nil
	file_n2x_protobuf_resources_v1_topology_topology_proto_depIdxs = nil
}
