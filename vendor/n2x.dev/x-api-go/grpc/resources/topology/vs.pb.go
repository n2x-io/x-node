// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0--rc1
// source: n2x/protobuf/resources/v1/topology/vs.proto

package topology

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	resource "n2x.dev/x-api-go/grpc/resources/resource"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VSProto int32

const (
	VSProto_PROTO_UNSPECIFIED VSProto = 0
	VSProto_PROTO_TCP_GENERIC VSProto = 1001
	VSProto_PROTO_TCP_HTTP    VSProto = 1011
	VSProto_PROTO_TCP_HTTPS   VSProto = 1012
	VSProto_PROTO_TCP_SSH     VSProto = 1021
	VSProto_PROTO_UDP_GENERIC VSProto = 2001
)

// Enum value maps for VSProto.
var (
	VSProto_name = map[int32]string{
		0:    "PROTO_UNSPECIFIED",
		1001: "PROTO_TCP_GENERIC",
		1011: "PROTO_TCP_HTTP",
		1012: "PROTO_TCP_HTTPS",
		1021: "PROTO_TCP_SSH",
		2001: "PROTO_UDP_GENERIC",
	}
	VSProto_value = map[string]int32{
		"PROTO_UNSPECIFIED": 0,
		"PROTO_TCP_GENERIC": 1001,
		"PROTO_TCP_HTTP":    1011,
		"PROTO_TCP_HTTPS":   1012,
		"PROTO_TCP_SSH":     1021,
		"PROTO_UDP_GENERIC": 2001,
	}
)

func (x VSProto) Enum() *VSProto {
	p := new(VSProto)
	*p = x
	return p
}

func (x VSProto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VSProto) Descriptor() protoreflect.EnumDescriptor {
	return file_n2x_protobuf_resources_v1_topology_vs_proto_enumTypes[0].Descriptor()
}

func (VSProto) Type() protoreflect.EnumType {
	return &file_n2x_protobuf_resources_v1_topology_vs_proto_enumTypes[0]
}

func (x VSProto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VSProto.Descriptor instead.
func (VSProto) EnumDescriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_topology_vs_proto_rawDescGZIP(), []int{0}
}

type VSCNAMEStatus int32

const (
	VSCNAMEStatus_CNAME_STATUS_UNKNOWN VSCNAMEStatus = 0
	VSCNAMEStatus_CNAME_STATUS_OK      VSCNAMEStatus = 11
	VSCNAMEStatus_CNAME_STATUS_ERROR   VSCNAMEStatus = 21
)

// Enum value maps for VSCNAMEStatus.
var (
	VSCNAMEStatus_name = map[int32]string{
		0:  "CNAME_STATUS_UNKNOWN",
		11: "CNAME_STATUS_OK",
		21: "CNAME_STATUS_ERROR",
	}
	VSCNAMEStatus_value = map[string]int32{
		"CNAME_STATUS_UNKNOWN": 0,
		"CNAME_STATUS_OK":      11,
		"CNAME_STATUS_ERROR":   21,
	}
)

func (x VSCNAMEStatus) Enum() *VSCNAMEStatus {
	p := new(VSCNAMEStatus)
	*p = x
	return p
}

func (x VSCNAMEStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VSCNAMEStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_n2x_protobuf_resources_v1_topology_vs_proto_enumTypes[1].Descriptor()
}

func (VSCNAMEStatus) Type() protoreflect.EnumType {
	return &file_n2x_protobuf_resources_v1_topology_vs_proto_enumTypes[1]
}

func (x VSCNAMEStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VSCNAMEStatus.Descriptor instead.
func (VSCNAMEStatus) EnumDescriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_topology_vs_proto_rawDescGZIP(), []int{1}
}

type NewVSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID   string           `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	TenantID    string           `protobuf:"bytes,21,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	NetID       string           `protobuf:"bytes,22,opt,name=netID,proto3" json:"netID,omitempty"`
	LocationID  string           `protobuf:"bytes,31,opt,name=locationID,proto3" json:"locationID,omitempty"`
	Name        string           `protobuf:"bytes,41,opt,name=name,proto3" json:"name,omitempty"`
	Description string           `protobuf:"bytes,42,opt,name=description,proto3" json:"description,omitempty"`
	Cname       string           `protobuf:"bytes,61,opt,name=cname,proto3" json:"cname,omitempty"`
	ReqAuth     bool             `protobuf:"varint,71,opt,name=reqAuth,proto3" json:"reqAuth,omitempty"`
	Proto       VSProto          `protobuf:"varint,101,opt,name=proto,proto3,enum=topology.VSProto" json:"proto,omitempty"`
	VSPort      int32            `protobuf:"varint,111,opt,name=VSPort,proto3" json:"VSPort,omitempty"` // only if proto == PROTO_TCP_GENERIC or proto == PROTO_UDP_GENERIC
	NodeAppSvcs []*NodeAppSvcReq `protobuf:"bytes,1001,rep,name=nodeAppSvcs,proto3" json:"nodeAppSvcs,omitempty"`
	Tags        []string         `protobuf:"bytes,10000,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *NewVSRequest) Reset() {
	*x = NewVSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewVSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewVSRequest) ProtoMessage() {}

func (x *NewVSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewVSRequest.ProtoReflect.Descriptor instead.
func (*NewVSRequest) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_topology_vs_proto_rawDescGZIP(), []int{0}
}

func (x *NewVSRequest) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *NewVSRequest) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

func (x *NewVSRequest) GetNetID() string {
	if x != nil {
		return x.NetID
	}
	return ""
}

func (x *NewVSRequest) GetLocationID() string {
	if x != nil {
		return x.LocationID
	}
	return ""
}

func (x *NewVSRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NewVSRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *NewVSRequest) GetCname() string {
	if x != nil {
		return x.Cname
	}
	return ""
}

func (x *NewVSRequest) GetReqAuth() bool {
	if x != nil {
		return x.ReqAuth
	}
	return false
}

func (x *NewVSRequest) GetProto() VSProto {
	if x != nil {
		return x.Proto
	}
	return VSProto_PROTO_UNSPECIFIED
}

func (x *NewVSRequest) GetVSPort() int32 {
	if x != nil {
		return x.VSPort
	}
	return 0
}

func (x *NewVSRequest) GetNodeAppSvcs() []*NodeAppSvcReq {
	if x != nil {
		return x.NodeAppSvcs
	}
	return nil
}

func (x *NewVSRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type AddVSAppSvcRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID     string         `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	VSID          string         `protobuf:"bytes,11,opt,name=VSID,proto3" json:"VSID,omitempty"`
	NodeAppSvcReq *NodeAppSvcReq `protobuf:"bytes,1001,opt,name=nodeAppSvcReq,proto3" json:"nodeAppSvcReq,omitempty"`
}

func (x *AddVSAppSvcRequest) Reset() {
	*x = AddVSAppSvcRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddVSAppSvcRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddVSAppSvcRequest) ProtoMessage() {}

func (x *AddVSAppSvcRequest) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddVSAppSvcRequest.ProtoReflect.Descriptor instead.
func (*AddVSAppSvcRequest) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_topology_vs_proto_rawDescGZIP(), []int{1}
}

func (x *AddVSAppSvcRequest) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *AddVSAppSvcRequest) GetVSID() string {
	if x != nil {
		return x.VSID
	}
	return ""
}

func (x *AddVSAppSvcRequest) GetNodeAppSvcReq() *NodeAppSvcReq {
	if x != nil {
		return x.NodeAppSvcReq
	}
	return nil
}

type DeleteVSAppSvcRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID string `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	VSID      string `protobuf:"bytes,11,opt,name=VSID,proto3" json:"VSID,omitempty"`
	AppSvcID  string `protobuf:"bytes,31,opt,name=appSvcID,proto3" json:"appSvcID,omitempty"`
}

func (x *DeleteVSAppSvcRequest) Reset() {
	*x = DeleteVSAppSvcRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVSAppSvcRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVSAppSvcRequest) ProtoMessage() {}

func (x *DeleteVSAppSvcRequest) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVSAppSvcRequest.ProtoReflect.Descriptor instead.
func (*DeleteVSAppSvcRequest) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_topology_vs_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteVSAppSvcRequest) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *DeleteVSAppSvcRequest) GetVSID() string {
	if x != nil {
		return x.VSID
	}
	return ""
}

func (x *DeleteVSAppSvcRequest) GetAppSvcID() string {
	if x != nil {
		return x.AppSvcID
	}
	return ""
}

type UpdateVSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID   string   `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	VSID        string   `protobuf:"bytes,11,opt,name=VSID,proto3" json:"VSID,omitempty"`
	LocationID  string   `protobuf:"bytes,31,opt,name=locationID,proto3" json:"locationID,omitempty"` // must not be updated, be it's needed to update cname
	Name        string   `protobuf:"bytes,41,opt,name=name,proto3" json:"name,omitempty"`
	Description string   `protobuf:"bytes,42,opt,name=description,proto3" json:"description,omitempty"`
	Cname       string   `protobuf:"bytes,61,opt,name=cname,proto3" json:"cname,omitempty"`
	ReqAuth     bool     `protobuf:"varint,71,opt,name=reqAuth,proto3" json:"reqAuth,omitempty"`
	Tags        []string `protobuf:"bytes,10000,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *UpdateVSRequest) Reset() {
	*x = UpdateVSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVSRequest) ProtoMessage() {}

func (x *UpdateVSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVSRequest.ProtoReflect.Descriptor instead.
func (*UpdateVSRequest) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_topology_vs_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateVSRequest) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *UpdateVSRequest) GetVSID() string {
	if x != nil {
		return x.VSID
	}
	return ""
}

func (x *UpdateVSRequest) GetLocationID() string {
	if x != nil {
		return x.LocationID
	}
	return ""
}

func (x *UpdateVSRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateVSRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateVSRequest) GetCname() string {
	if x != nil {
		return x.Cname
	}
	return ""
}

func (x *UpdateVSRequest) GetReqAuth() bool {
	if x != nil {
		return x.ReqAuth
	}
	return false
}

func (x *UpdateVSRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type VS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID   string    `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	VSID        string    `protobuf:"bytes,11,opt,name=VSID,proto3" json:"VSID,omitempty"`
	TenantID    string    `protobuf:"bytes,21,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	NetID       string    `protobuf:"bytes,22,opt,name=netID,proto3" json:"netID,omitempty"`
	LocationID  string    `protobuf:"bytes,31,opt,name=locationID,proto3" json:"locationID,omitempty"`
	Name        string    `protobuf:"bytes,41,opt,name=name,proto3" json:"name,omitempty"`
	Description string    `protobuf:"bytes,42,opt,name=description,proto3" json:"description,omitempty"`
	Cname       string    `protobuf:"bytes,61,opt,name=cname,proto3" json:"cname,omitempty"`
	ReqAuth     bool      `protobuf:"varint,71,opt,name=reqAuth,proto3" json:"reqAuth,omitempty"`
	Proto       VSProto   `protobuf:"varint,101,opt,name=proto,proto3,enum=topology.VSProto" json:"proto,omitempty"`
	VSPort      int32     `protobuf:"varint,111,opt,name=VSPort,proto3" json:"VSPort,omitempty"` // only if proto == PROTO_TCP_GENERIC or proto == PROTO_UDP_GENERIC
	AppSvcs     []*AppSvc `protobuf:"bytes,1001,rep,name=appSvcs,proto3" json:"appSvcs,omitempty"`
	Tags        []string  `protobuf:"bytes,10000,rep,name=tags,proto3" json:"tags,omitempty"`
	LastUpdated int64     `protobuf:"varint,20000,opt,name=lastUpdated,proto3" json:"lastUpdated,omitempty"`
}

func (x *VS) Reset() {
	*x = VS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VS) ProtoMessage() {}

func (x *VS) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VS.ProtoReflect.Descriptor instead.
func (*VS) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_topology_vs_proto_rawDescGZIP(), []int{4}
}

func (x *VS) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *VS) GetVSID() string {
	if x != nil {
		return x.VSID
	}
	return ""
}

func (x *VS) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

func (x *VS) GetNetID() string {
	if x != nil {
		return x.NetID
	}
	return ""
}

func (x *VS) GetLocationID() string {
	if x != nil {
		return x.LocationID
	}
	return ""
}

func (x *VS) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VS) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *VS) GetCname() string {
	if x != nil {
		return x.Cname
	}
	return ""
}

func (x *VS) GetReqAuth() bool {
	if x != nil {
		return x.ReqAuth
	}
	return false
}

func (x *VS) GetProto() VSProto {
	if x != nil {
		return x.Proto
	}
	return VSProto_PROTO_UNSPECIFIED
}

func (x *VS) GetVSPort() int32 {
	if x != nil {
		return x.VSPort
	}
	return 0
}

func (x *VS) GetAppSvcs() []*AppSvc {
	if x != nil {
		return x.AppSvcs
	}
	return nil
}

func (x *VS) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *VS) GetLastUpdated() int64 {
	if x != nil {
		return x.LastUpdated
	}
	return 0
}

type NodeAppSvcReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantID string `protobuf:"bytes,21,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	NetID    string `protobuf:"bytes,31,opt,name=netID,proto3" json:"netID,omitempty"`
	SubnetID string `protobuf:"bytes,41,opt,name=subnetID,proto3" json:"subnetID,omitempty"`
	NodeID   string `protobuf:"bytes,51,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	NodeName string `protobuf:"bytes,52,opt,name=nodeName,proto3" json:"nodeName,omitempty"`
	// string appSvcName = 61;
	// string appSvcDescription = 62;
	Proto  VSProto `protobuf:"varint,101,opt,name=proto,proto3,enum=topology.VSProto" json:"proto,omitempty"`
	RSPort int32   `protobuf:"varint,111,opt,name=RSPort,proto3" json:"RSPort,omitempty"`
}

func (x *NodeAppSvcReq) Reset() {
	*x = NodeAppSvcReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeAppSvcReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeAppSvcReq) ProtoMessage() {}

func (x *NodeAppSvcReq) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeAppSvcReq.ProtoReflect.Descriptor instead.
func (*NodeAppSvcReq) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_topology_vs_proto_rawDescGZIP(), []int{5}
}

func (x *NodeAppSvcReq) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

func (x *NodeAppSvcReq) GetNetID() string {
	if x != nil {
		return x.NetID
	}
	return ""
}

func (x *NodeAppSvcReq) GetSubnetID() string {
	if x != nil {
		return x.SubnetID
	}
	return ""
}

func (x *NodeAppSvcReq) GetNodeID() string {
	if x != nil {
		return x.NodeID
	}
	return ""
}

func (x *NodeAppSvcReq) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *NodeAppSvcReq) GetProto() VSProto {
	if x != nil {
		return x.Proto
	}
	return VSProto_PROTO_UNSPECIFIED
}

func (x *NodeAppSvcReq) GetRSPort() int32 {
	if x != nil {
		return x.RSPort
	}
	return 0
}

type VSs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *resource.ListResponse `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	VSs  []*VS                  `protobuf:"bytes,2,rep,name=VSs,proto3" json:"VSs,omitempty"`
}

func (x *VSs) Reset() {
	*x = VSs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VSs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VSs) ProtoMessage() {}

func (x *VSs) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VSs.ProtoReflect.Descriptor instead.
func (*VSs) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_topology_vs_proto_rawDescGZIP(), []int{6}
}

func (x *VSs) GetMeta() *resource.ListResponse {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *VSs) GetVSs() []*VS {
	if x != nil {
		return x.VSs
	}
	return nil
}

type ListVSsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta      *resource.ListRequest `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	AccountID string                `protobuf:"bytes,2,opt,name=accountID,proto3" json:"accountID,omitempty"`
}

func (x *ListVSsRequest) Reset() {
	*x = ListVSsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVSsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVSsRequest) ProtoMessage() {}

func (x *ListVSsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVSsRequest.ProtoReflect.Descriptor instead.
func (*ListVSsRequest) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_topology_vs_proto_rawDescGZIP(), []int{7}
}

func (x *ListVSsRequest) GetMeta() *resource.ListRequest {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *ListVSsRequest) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

type VSReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID string `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	VSID      string `protobuf:"bytes,11,opt,name=VSID,proto3" json:"VSID,omitempty"`
}

func (x *VSReq) Reset() {
	*x = VSReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VSReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VSReq) ProtoMessage() {}

func (x *VSReq) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VSReq.ProtoReflect.Descriptor instead.
func (*VSReq) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_topology_vs_proto_rawDescGZIP(), []int{8}
}

func (x *VSReq) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *VSReq) GetVSID() string {
	if x != nil {
		return x.VSID
	}
	return ""
}

type AppSvc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID  string  `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	VSID       string  `protobuf:"bytes,2,opt,name=VSID,proto3" json:"VSID,omitempty"`
	AppSvcID   string  `protobuf:"bytes,11,opt,name=appSvcID,proto3" json:"appSvcID,omitempty"`
	TenantID   string  `protobuf:"bytes,21,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	NetID      string  `protobuf:"bytes,31,opt,name=netID,proto3" json:"netID,omitempty"`
	SubnetID   string  `protobuf:"bytes,41,opt,name=subnetID,proto3" json:"subnetID,omitempty"`
	NodeID     string  `protobuf:"bytes,51,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	NodeName   string  `protobuf:"bytes,52,opt,name=nodeName,proto3" json:"nodeName,omitempty"`     // string nodeDescription = 53;
	LocationID string  `protobuf:"bytes,71,opt,name=locationID,proto3" json:"locationID,omitempty"` // inherited from VS
	Cname      string  `protobuf:"bytes,81,opt,name=cname,proto3" json:"cname,omitempty"`           // inherited from VS
	ReqAuth    bool    `protobuf:"varint,91,opt,name=reqAuth,proto3" json:"reqAuth,omitempty"`      // inherited from VS
	Proto      VSProto `protobuf:"varint,101,opt,name=proto,proto3,enum=topology.VSProto" json:"proto,omitempty"`
	VSPort     int32   `protobuf:"varint,111,opt,name=VSPort,proto3" json:"VSPort,omitempty"` // inherited from VS
	RSPort     int32   `protobuf:"varint,121,opt,name=RSPort,proto3" json:"RSPort,omitempty"`
}

func (x *AppSvc) Reset() {
	*x = AppSvc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppSvc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppSvc) ProtoMessage() {}

func (x *AppSvc) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppSvc.ProtoReflect.Descriptor instead.
func (*AppSvc) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_topology_vs_proto_rawDescGZIP(), []int{9}
}

func (x *AppSvc) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *AppSvc) GetVSID() string {
	if x != nil {
		return x.VSID
	}
	return ""
}

func (x *AppSvc) GetAppSvcID() string {
	if x != nil {
		return x.AppSvcID
	}
	return ""
}

func (x *AppSvc) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

func (x *AppSvc) GetNetID() string {
	if x != nil {
		return x.NetID
	}
	return ""
}

func (x *AppSvc) GetSubnetID() string {
	if x != nil {
		return x.SubnetID
	}
	return ""
}

func (x *AppSvc) GetNodeID() string {
	if x != nil {
		return x.NodeID
	}
	return ""
}

func (x *AppSvc) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *AppSvc) GetLocationID() string {
	if x != nil {
		return x.LocationID
	}
	return ""
}

func (x *AppSvc) GetCname() string {
	if x != nil {
		return x.Cname
	}
	return ""
}

func (x *AppSvc) GetReqAuth() bool {
	if x != nil {
		return x.ReqAuth
	}
	return false
}

func (x *AppSvc) GetProto() VSProto {
	if x != nil {
		return x.Proto
	}
	return VSProto_PROTO_UNSPECIFIED
}

func (x *AppSvc) GetVSPort() int32 {
	if x != nil {
		return x.VSPort
	}
	return 0
}

func (x *AppSvc) GetRSPort() int32 {
	if x != nil {
		return x.RSPort
	}
	return 0
}

type CheckVSCNAMERequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID  string `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	Cname      string `protobuf:"bytes,11,opt,name=cname,proto3" json:"cname,omitempty"`
	LocationID string `protobuf:"bytes,21,opt,name=locationID,proto3" json:"locationID,omitempty"`
}

func (x *CheckVSCNAMERequest) Reset() {
	*x = CheckVSCNAMERequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckVSCNAMERequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckVSCNAMERequest) ProtoMessage() {}

func (x *CheckVSCNAMERequest) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckVSCNAMERequest.ProtoReflect.Descriptor instead.
func (*CheckVSCNAMERequest) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_topology_vs_proto_rawDescGZIP(), []int{10}
}

func (x *CheckVSCNAMERequest) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *CheckVSCNAMERequest) GetCname() string {
	if x != nil {
		return x.Cname
	}
	return ""
}

func (x *CheckVSCNAMERequest) GetLocationID() string {
	if x != nil {
		return x.LocationID
	}
	return ""
}

type CheckVSCNAMEResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status VSCNAMEStatus `protobuf:"varint,1,opt,name=status,proto3,enum=topology.VSCNAMEStatus" json:"status,omitempty"`
	Msg    string        `protobuf:"bytes,11,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *CheckVSCNAMEResponse) Reset() {
	*x = CheckVSCNAMEResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckVSCNAMEResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckVSCNAMEResponse) ProtoMessage() {}

func (x *CheckVSCNAMEResponse) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckVSCNAMEResponse.ProtoReflect.Descriptor instead.
func (*CheckVSCNAMEResponse) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_topology_vs_proto_rawDescGZIP(), []int{11}
}

func (x *CheckVSCNAMEResponse) GetStatus() VSCNAMEStatus {
	if x != nil {
		return x.Status
	}
	return VSCNAMEStatus_CNAME_STATUS_UNKNOWN
}

func (x *CheckVSCNAMEResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_n2x_protobuf_resources_v1_topology_vs_proto protoreflect.FileDescriptor

var file_n2x_protobuf_resources_v1_topology_vs_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x6e, 0x32, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f, 0x70, 0x6f,
	0x6c, 0x6f, 0x67, 0x79, 0x2f, 0x76, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x74,
	0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x1a, 0x2d, 0x6e, 0x32, 0x78, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x6c, 0x69, 0x73, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf6, 0x02, 0x0a, 0x0c, 0x4e, 0x65, 0x77, 0x56, 0x53,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x41, 0x75, 0x74, 0x68, 0x18, 0x47,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x71, 0x41, 0x75, 0x74, 0x68, 0x12, 0x27, 0x0a,
	0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x74,
	0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x56, 0x53, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x56, 0x53, 0x50, 0x6f, 0x72, 0x74,
	0x18, 0x6f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x56, 0x53, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x3a,
	0x0a, 0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x70, 0x70, 0x53, 0x76, 0x63, 0x73, 0x18, 0xe9, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x41, 0x70, 0x70, 0x53, 0x76, 0x63, 0x52, 0x65, 0x71, 0x52, 0x0b, 0x6e,
	0x6f, 0x64, 0x65, 0x41, 0x70, 0x70, 0x53, 0x76, 0x63, 0x73, 0x12, 0x13, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x90, 0x4e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22,
	0x86, 0x01, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x56, 0x53, 0x41, 0x70, 0x70, 0x53, 0x76, 0x63, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x56, 0x53, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x56, 0x53, 0x49, 0x44, 0x12, 0x3e, 0x0a, 0x0d, 0x6e, 0x6f, 0x64, 0x65,
	0x41, 0x70, 0x70, 0x53, 0x76, 0x63, 0x52, 0x65, 0x71, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x41, 0x70, 0x70, 0x53, 0x76, 0x63, 0x52, 0x65, 0x71, 0x52, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x41,
	0x70, 0x70, 0x53, 0x76, 0x63, 0x52, 0x65, 0x71, 0x22, 0x65, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x56, 0x53, 0x41, 0x70, 0x70, 0x53, 0x76, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x56, 0x53, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x56,
	0x53, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x53, 0x76, 0x63, 0x49, 0x44, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70, 0x70, 0x53, 0x76, 0x63, 0x49, 0x44, 0x22,
	0xde, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x53, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x56, 0x53, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x56, 0x53, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x29, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x41, 0x75, 0x74, 0x68, 0x18, 0x47, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x71, 0x41, 0x75, 0x74, 0x68, 0x12, 0x13, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x90, 0x4e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x22, 0x95, 0x03, 0x0a, 0x02, 0x56, 0x53, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x56, 0x53, 0x49, 0x44, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x56, 0x53, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x2a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x41, 0x75,
	0x74, 0x68, 0x18, 0x47, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x71, 0x41, 0x75, 0x74,
	0x68, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x11, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x56, 0x53, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x56, 0x53,
	0x50, 0x6f, 0x72, 0x74, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x56, 0x53, 0x50, 0x6f,
	0x72, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x53, 0x76, 0x63, 0x73, 0x18, 0xe9, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e,
	0x41, 0x70, 0x70, 0x53, 0x76, 0x63, 0x52, 0x07, 0x61, 0x70, 0x70, 0x53, 0x76, 0x63, 0x73, 0x12,
	0x13, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x90, 0x4e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x12, 0x22, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x18, 0xa0, 0x9c, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x61, 0x73,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0xd2, 0x01, 0x0a, 0x0d, 0x4e, 0x6f, 0x64,
	0x65, 0x41, 0x70, 0x70, 0x53, 0x76, 0x63, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x44, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x34, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x05,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x74, 0x6f,
	0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x56, 0x53, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x05,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x53, 0x50, 0x6f, 0x72, 0x74, 0x18,
	0x6f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x52, 0x53, 0x50, 0x6f, 0x72, 0x74, 0x22, 0x51, 0x0a,
	0x03, 0x56, 0x53, 0x73, 0x12, 0x2a, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x12, 0x1e, 0x0a, 0x03, 0x56, 0x53, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x56, 0x53, 0x52, 0x03, 0x56, 0x53, 0x73,
	0x22, 0x59, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x53, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x39, 0x0a, 0x05, 0x56,
	0x53, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x56, 0x53, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x56, 0x53, 0x49, 0x44, 0x22, 0x81, 0x03, 0x0a, 0x06, 0x41, 0x70, 0x70, 0x53, 0x76,
	0x63, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x56, 0x53, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x56,
	0x53, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x53, 0x76, 0x63, 0x49, 0x44, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70, 0x70, 0x53, 0x76, 0x63, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6e,
	0x65, 0x74, 0x49, 0x44, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x65, 0x74, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x18, 0x29, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18,
	0x47, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x51, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x41, 0x75,
	0x74, 0x68, 0x18, 0x5b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x71, 0x41, 0x75, 0x74,
	0x68, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x11, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x56, 0x53, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x56, 0x53,
	0x50, 0x6f, 0x72, 0x74, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x56, 0x53, 0x50, 0x6f,
	0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x53, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x79, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x52, 0x53, 0x50, 0x6f, 0x72, 0x74, 0x22, 0x69, 0x0a, 0x13, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x56, 0x53, 0x43, 0x4e, 0x41, 0x4d, 0x45, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x59, 0x0a, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56, 0x53,
	0x43, 0x4e, 0x41, 0x4d, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e,
	0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x56, 0x53, 0x43, 0x4e, 0x41, 0x4d, 0x45,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x2a, 0x8f, 0x01, 0x0a, 0x07, 0x56, 0x53, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x0a, 0x11,
	0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x11, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x54, 0x43, 0x50,
	0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x49, 0x43, 0x10, 0xe9, 0x07, 0x12, 0x13, 0x0a, 0x0e, 0x50,
	0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x54, 0x43, 0x50, 0x5f, 0x48, 0x54, 0x54, 0x50, 0x10, 0xf3, 0x07,
	0x12, 0x14, 0x0a, 0x0f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x54, 0x43, 0x50, 0x5f, 0x48, 0x54,
	0x54, 0x50, 0x53, 0x10, 0xf4, 0x07, 0x12, 0x12, 0x0a, 0x0d, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f,
	0x54, 0x43, 0x50, 0x5f, 0x53, 0x53, 0x48, 0x10, 0xfd, 0x07, 0x12, 0x16, 0x0a, 0x11, 0x50, 0x52,
	0x4f, 0x54, 0x4f, 0x5f, 0x55, 0x44, 0x50, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x49, 0x43, 0x10,
	0xd1, 0x0f, 0x2a, 0x56, 0x0a, 0x0d, 0x56, 0x53, 0x43, 0x4e, 0x41, 0x4d, 0x45, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x13, 0x0a,
	0x0f, 0x43, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x4b,
	0x10, 0x0b, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x15, 0x42, 0x2a, 0x5a, 0x28, 0x6e, 0x32,
	0x78, 0x2e, 0x64, 0x65, 0x76, 0x2f, 0x78, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x67,
	0x72, 0x70, 0x63, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x74, 0x6f,
	0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_n2x_protobuf_resources_v1_topology_vs_proto_rawDescOnce sync.Once
	file_n2x_protobuf_resources_v1_topology_vs_proto_rawDescData = file_n2x_protobuf_resources_v1_topology_vs_proto_rawDesc
)

func file_n2x_protobuf_resources_v1_topology_vs_proto_rawDescGZIP() []byte {
	file_n2x_protobuf_resources_v1_topology_vs_proto_rawDescOnce.Do(func() {
		file_n2x_protobuf_resources_v1_topology_vs_proto_rawDescData = protoimpl.X.CompressGZIP(file_n2x_protobuf_resources_v1_topology_vs_proto_rawDescData)
	})
	return file_n2x_protobuf_resources_v1_topology_vs_proto_rawDescData
}

var file_n2x_protobuf_resources_v1_topology_vs_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_n2x_protobuf_resources_v1_topology_vs_proto_goTypes = []any{
	(VSProto)(0),                  // 0: topology.VSProto
	(VSCNAMEStatus)(0),            // 1: topology.VSCNAMEStatus
	(*NewVSRequest)(nil),          // 2: topology.NewVSRequest
	(*AddVSAppSvcRequest)(nil),    // 3: topology.AddVSAppSvcRequest
	(*DeleteVSAppSvcRequest)(nil), // 4: topology.DeleteVSAppSvcRequest
	(*UpdateVSRequest)(nil),       // 5: topology.UpdateVSRequest
	(*VS)(nil),                    // 6: topology.VS
	(*NodeAppSvcReq)(nil),         // 7: topology.NodeAppSvcReq
	(*VSs)(nil),                   // 8: topology.VSs
	(*ListVSsRequest)(nil),        // 9: topology.ListVSsRequest
	(*VSReq)(nil),                 // 10: topology.VSReq
	(*AppSvc)(nil),                // 11: topology.AppSvc
	(*CheckVSCNAMERequest)(nil),   // 12: topology.CheckVSCNAMERequest
	(*CheckVSCNAMEResponse)(nil),  // 13: topology.CheckVSCNAMEResponse
	(*resource.ListResponse)(nil), // 14: resource.ListResponse
	(*resource.ListRequest)(nil),  // 15: resource.ListRequest
}
var file_n2x_protobuf_resources_v1_topology_vs_proto_depIdxs = []int32{
	0,  // 0: topology.NewVSRequest.proto:type_name -> topology.VSProto
	7,  // 1: topology.NewVSRequest.nodeAppSvcs:type_name -> topology.NodeAppSvcReq
	7,  // 2: topology.AddVSAppSvcRequest.nodeAppSvcReq:type_name -> topology.NodeAppSvcReq
	0,  // 3: topology.VS.proto:type_name -> topology.VSProto
	11, // 4: topology.VS.appSvcs:type_name -> topology.AppSvc
	0,  // 5: topology.NodeAppSvcReq.proto:type_name -> topology.VSProto
	14, // 6: topology.VSs.meta:type_name -> resource.ListResponse
	6,  // 7: topology.VSs.VSs:type_name -> topology.VS
	15, // 8: topology.ListVSsRequest.meta:type_name -> resource.ListRequest
	0,  // 9: topology.AppSvc.proto:type_name -> topology.VSProto
	1,  // 10: topology.CheckVSCNAMEResponse.status:type_name -> topology.VSCNAMEStatus
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_n2x_protobuf_resources_v1_topology_vs_proto_init() }
func file_n2x_protobuf_resources_v1_topology_vs_proto_init() {
	if File_n2x_protobuf_resources_v1_topology_vs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*NewVSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AddVSAppSvcRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteVSAppSvcRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateVSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*VS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*NodeAppSvcReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*VSs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ListVSsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*VSReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*AppSvc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CheckVSCNAMERequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*CheckVSCNAMEResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_n2x_protobuf_resources_v1_topology_vs_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_n2x_protobuf_resources_v1_topology_vs_proto_goTypes,
		DependencyIndexes: file_n2x_protobuf_resources_v1_topology_vs_proto_depIdxs,
		EnumInfos:         file_n2x_protobuf_resources_v1_topology_vs_proto_enumTypes,
		MessageInfos:      file_n2x_protobuf_resources_v1_topology_vs_proto_msgTypes,
	}.Build()
	File_n2x_protobuf_resources_v1_topology_vs_proto = out.File
	file_n2x_protobuf_resources_v1_topology_vs_proto_rawDesc = nil
	file_n2x_protobuf_resources_v1_topology_vs_proto_goTypes = nil
	file_n2x_protobuf_resources_v1_topology_vs_proto_depIdxs = nil
}
