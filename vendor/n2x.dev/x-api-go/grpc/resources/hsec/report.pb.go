// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0--rc1
// source: n2x/protobuf/resources/v1/hsec/report.proto

package hsec

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Report struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchemaVersion int32     `protobuf:"varint,11,opt,name=schemaVersion,proto3" json:"schemaVersion,omitempty"`
	CreatedAt     int64     `protobuf:"varint,21,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	ArtifactName  string    `protobuf:"bytes,31,opt,name=artifactName,proto3" json:"artifactName,omitempty"`
	ArtifactType  string    `protobuf:"bytes,41,opt,name=artifactType,proto3" json:"artifactType,omitempty"` // ArtifactType
	Metadata      *Metadata `protobuf:"bytes,51,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Results       []*Result `protobuf:"bytes,61,rep,name=results,proto3" json:"results,omitempty"`
	// SBOM
	BOM *BOM `protobuf:"bytes,101,opt,name=BOM,proto3" json:"BOM,omitempty"`
}

func (x *Report) Reset() {
	*x = Report{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_hsec_report_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Report) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Report) ProtoMessage() {}

func (x *Report) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_hsec_report_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Report.ProtoReflect.Descriptor instead.
func (*Report) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_hsec_report_proto_rawDescGZIP(), []int{0}
}

func (x *Report) GetSchemaVersion() int32 {
	if x != nil {
		return x.SchemaVersion
	}
	return 0
}

func (x *Report) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Report) GetArtifactName() string {
	if x != nil {
		return x.ArtifactName
	}
	return ""
}

func (x *Report) GetArtifactType() string {
	if x != nil {
		return x.ArtifactType
	}
	return ""
}

func (x *Report) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Report) GetResults() []*Result {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *Report) GetBOM() *BOM {
	if x != nil {
		return x.BOM
	}
	return nil
}

type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size int64 `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
	OS   *OS   `protobuf:"bytes,21,opt,name=OS,proto3" json:"OS,omitempty"`
	// Container Image
	ImageID     string      `protobuf:"bytes,101,opt,name=imageID,proto3" json:"imageID,omitempty"`
	DiffIDs     []string    `protobuf:"bytes,111,rep,name=diffIDs,proto3" json:"diffIDs,omitempty"`
	RepoTags    []string    `protobuf:"bytes,121,rep,name=repoTags,proto3" json:"repoTags,omitempty"`
	RepoDigests []string    `protobuf:"bytes,131,rep,name=repoDigests,proto3" json:"repoDigests,omitempty"`
	ImageConfig *ConfigFile `protobuf:"bytes,141,opt,name=imageConfig,proto3" json:"imageConfig,omitempty"`
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_hsec_report_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_hsec_report_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_hsec_report_proto_rawDescGZIP(), []int{1}
}

func (x *Metadata) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Metadata) GetOS() *OS {
	if x != nil {
		return x.OS
	}
	return nil
}

func (x *Metadata) GetImageID() string {
	if x != nil {
		return x.ImageID
	}
	return ""
}

func (x *Metadata) GetDiffIDs() []string {
	if x != nil {
		return x.DiffIDs
	}
	return nil
}

func (x *Metadata) GetRepoTags() []string {
	if x != nil {
		return x.RepoTags
	}
	return nil
}

func (x *Metadata) GetRepoDigests() []string {
	if x != nil {
		return x.RepoDigests
	}
	return nil
}

func (x *Metadata) GetImageConfig() *ConfigFile {
	if x != nil {
		return x.ImageConfig
	}
	return nil
}

type OS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Family string `protobuf:"bytes,11,opt,name=family,proto3" json:"family,omitempty"` // OSType
	Name   string `protobuf:"bytes,21,opt,name=name,proto3" json:"name,omitempty"`
	EOSL   bool   `protobuf:"varint,31,opt,name=EOSL,proto3" json:"EOSL,omitempty"`
	// This field is used for enhanced security maintenance programs such as
	// Ubuntu ESM, Debian Extended LTS.
	Extended bool `protobuf:"varint,41,opt,name=extended,proto3" json:"extended,omitempty"`
}

func (x *OS) Reset() {
	*x = OS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_hsec_report_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OS) ProtoMessage() {}

func (x *OS) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_hsec_report_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OS.ProtoReflect.Descriptor instead.
func (*OS) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_hsec_report_proto_rawDescGZIP(), []int{2}
}

func (x *OS) GetFamily() string {
	if x != nil {
		return x.Family
	}
	return ""
}

func (x *OS) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OS) GetEOSL() bool {
	if x != nil {
		return x.EOSL
	}
	return false
}

func (x *OS) GetExtended() bool {
	if x != nil {
		return x.Extended
	}
	return false
}

type ConfigFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Architecture  string     `protobuf:"bytes,11,opt,name=architecture,proto3" json:"architecture,omitempty"`
	Author        string     `protobuf:"bytes,21,opt,name=author,proto3" json:"author,omitempty"`
	Container     string     `protobuf:"bytes,31,opt,name=container,proto3" json:"container,omitempty"`
	Created       int64      `protobuf:"varint,41,opt,name=created,proto3" json:"created,omitempty"`
	DockerVersion string     `protobuf:"bytes,51,opt,name=dockerVersion,proto3" json:"dockerVersion,omitempty"`
	History       []*History `protobuf:"bytes,61,rep,name=history,proto3" json:"history,omitempty"`
	OS            string     `protobuf:"bytes,71,opt,name=OS,proto3" json:"OS,omitempty"`
	RootFS        *RootFS    `protobuf:"bytes,81,opt,name=rootFS,proto3" json:"rootFS,omitempty"`
	Config        *Config    `protobuf:"bytes,91,opt,name=config,proto3" json:"config,omitempty"`
	OSVersion     string     `protobuf:"bytes,101,opt,name=OSVersion,proto3" json:"OSVersion,omitempty"`
	Variant       string     `protobuf:"bytes,111,opt,name=variant,proto3" json:"variant,omitempty"`
	OSFeatures    []string   `protobuf:"bytes,121,rep,name=OSFeatures,proto3" json:"OSFeatures,omitempty"`
}

func (x *ConfigFile) Reset() {
	*x = ConfigFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_hsec_report_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigFile) ProtoMessage() {}

func (x *ConfigFile) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_hsec_report_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigFile.ProtoReflect.Descriptor instead.
func (*ConfigFile) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_hsec_report_proto_rawDescGZIP(), []int{3}
}

func (x *ConfigFile) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *ConfigFile) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *ConfigFile) GetContainer() string {
	if x != nil {
		return x.Container
	}
	return ""
}

func (x *ConfigFile) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *ConfigFile) GetDockerVersion() string {
	if x != nil {
		return x.DockerVersion
	}
	return ""
}

func (x *ConfigFile) GetHistory() []*History {
	if x != nil {
		return x.History
	}
	return nil
}

func (x *ConfigFile) GetOS() string {
	if x != nil {
		return x.OS
	}
	return ""
}

func (x *ConfigFile) GetRootFS() *RootFS {
	if x != nil {
		return x.RootFS
	}
	return nil
}

func (x *ConfigFile) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ConfigFile) GetOSVersion() string {
	if x != nil {
		return x.OSVersion
	}
	return ""
}

func (x *ConfigFile) GetVariant() string {
	if x != nil {
		return x.Variant
	}
	return ""
}

func (x *ConfigFile) GetOSFeatures() []string {
	if x != nil {
		return x.OSFeatures
	}
	return nil
}

type History struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Author     string `protobuf:"bytes,11,opt,name=author,proto3" json:"author,omitempty"`
	Created    int64  `protobuf:"varint,21,opt,name=created,proto3" json:"created,omitempty"`
	CreatedBy  string `protobuf:"bytes,31,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	Comment    string `protobuf:"bytes,41,opt,name=comment,proto3" json:"comment,omitempty"`
	EmptyLayer bool   `protobuf:"varint,51,opt,name=emptyLayer,proto3" json:"emptyLayer,omitempty"`
}

func (x *History) Reset() {
	*x = History{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_hsec_report_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *History) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*History) ProtoMessage() {}

func (x *History) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_hsec_report_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use History.ProtoReflect.Descriptor instead.
func (*History) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_hsec_report_proto_rawDescGZIP(), []int{4}
}

func (x *History) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *History) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *History) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *History) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *History) GetEmptyLayer() bool {
	if x != nil {
		return x.EmptyLayer
	}
	return false
}

type RootFS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    string  `protobuf:"bytes,11,opt,name=type,proto3" json:"type,omitempty"`
	DiffIDs []*Hash `protobuf:"bytes,21,rep,name=diffIDs,proto3" json:"diffIDs,omitempty"`
}

func (x *RootFS) Reset() {
	*x = RootFS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_hsec_report_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RootFS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RootFS) ProtoMessage() {}

func (x *RootFS) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_hsec_report_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RootFS.ProtoReflect.Descriptor instead.
func (*RootFS) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_hsec_report_proto_rawDescGZIP(), []int{5}
}

func (x *RootFS) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *RootFS) GetDiffIDs() []*Hash {
	if x != nil {
		return x.DiffIDs
	}
	return nil
}

type Hash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Algorithm string `protobuf:"bytes,11,opt,name=algorithm,proto3" json:"algorithm,omitempty"`
	Hex       string `protobuf:"bytes,21,opt,name=hex,proto3" json:"hex,omitempty"`
}

func (x *Hash) Reset() {
	*x = Hash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_hsec_report_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hash) ProtoMessage() {}

func (x *Hash) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_hsec_report_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hash.ProtoReflect.Descriptor instead.
func (*Hash) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_hsec_report_proto_rawDescGZIP(), []int{6}
}

func (x *Hash) GetAlgorithm() string {
	if x != nil {
		return x.Algorithm
	}
	return ""
}

func (x *Hash) GetHex() string {
	if x != nil {
		return x.Hex
	}
	return ""
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttachStderr    bool              `protobuf:"varint,11,opt,name=attachStderr,proto3" json:"attachStderr,omitempty"`
	AttachStdin     bool              `protobuf:"varint,21,opt,name=attachStdin,proto3" json:"attachStdin,omitempty"`
	AttachStdout    bool              `protobuf:"varint,31,opt,name=attachStdout,proto3" json:"attachStdout,omitempty"`
	Cmd             []string          `protobuf:"bytes,41,rep,name=cmd,proto3" json:"cmd,omitempty"`
	Healthcheck     *HealthConfig     `protobuf:"bytes,51,opt,name=healthcheck,proto3" json:"healthcheck,omitempty"`
	DomainName      string            `protobuf:"bytes,61,opt,name=domainName,proto3" json:"domainName,omitempty"`
	Entrypoint      []string          `protobuf:"bytes,71,rep,name=entrypoint,proto3" json:"entrypoint,omitempty"`
	Env             []string          `protobuf:"bytes,81,rep,name=env,proto3" json:"env,omitempty"`
	Hostname        string            `protobuf:"bytes,91,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Image           string            `protobuf:"bytes,101,opt,name=image,proto3" json:"image,omitempty"`
	Labels          map[string]string `protobuf:"bytes,111,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	OnBuild         []string          `protobuf:"bytes,121,rep,name=onBuild,proto3" json:"onBuild,omitempty"`
	OpenStdin       bool              `protobuf:"varint,131,opt,name=openStdin,proto3" json:"openStdin,omitempty"`
	StdinOnce       bool              `protobuf:"varint,141,opt,name=stdinOnce,proto3" json:"stdinOnce,omitempty"`
	Tty             bool              `protobuf:"varint,151,opt,name=tty,proto3" json:"tty,omitempty"`
	User            string            `protobuf:"bytes,161,opt,name=user,proto3" json:"user,omitempty"`
	Volumes         map[string]string `protobuf:"bytes,171,rep,name=volumes,proto3" json:"volumes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // map[string]struct{}
	WorkingDir      string            `protobuf:"bytes,181,opt,name=workingDir,proto3" json:"workingDir,omitempty"`
	ExposedPorts    map[string]string `protobuf:"bytes,191,rep,name=exposedPorts,proto3" json:"exposedPorts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // map[string]struct{}
	ArgsEscaped     bool              `protobuf:"varint,201,opt,name=argsEscaped,proto3" json:"argsEscaped,omitempty"`
	NetworkDisabled bool              `protobuf:"varint,211,opt,name=networkDisabled,proto3" json:"networkDisabled,omitempty"`
	MacAddress      string            `protobuf:"bytes,221,opt,name=macAddress,proto3" json:"macAddress,omitempty"`
	StopSignal      string            `protobuf:"bytes,231,opt,name=stopSignal,proto3" json:"stopSignal,omitempty"`
	Shell           []string          `protobuf:"bytes,241,rep,name=shell,proto3" json:"shell,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_hsec_report_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_hsec_report_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_hsec_report_proto_rawDescGZIP(), []int{7}
}

func (x *Config) GetAttachStderr() bool {
	if x != nil {
		return x.AttachStderr
	}
	return false
}

func (x *Config) GetAttachStdin() bool {
	if x != nil {
		return x.AttachStdin
	}
	return false
}

func (x *Config) GetAttachStdout() bool {
	if x != nil {
		return x.AttachStdout
	}
	return false
}

func (x *Config) GetCmd() []string {
	if x != nil {
		return x.Cmd
	}
	return nil
}

func (x *Config) GetHealthcheck() *HealthConfig {
	if x != nil {
		return x.Healthcheck
	}
	return nil
}

func (x *Config) GetDomainName() string {
	if x != nil {
		return x.DomainName
	}
	return ""
}

func (x *Config) GetEntrypoint() []string {
	if x != nil {
		return x.Entrypoint
	}
	return nil
}

func (x *Config) GetEnv() []string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *Config) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Config) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Config) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Config) GetOnBuild() []string {
	if x != nil {
		return x.OnBuild
	}
	return nil
}

func (x *Config) GetOpenStdin() bool {
	if x != nil {
		return x.OpenStdin
	}
	return false
}

func (x *Config) GetStdinOnce() bool {
	if x != nil {
		return x.StdinOnce
	}
	return false
}

func (x *Config) GetTty() bool {
	if x != nil {
		return x.Tty
	}
	return false
}

func (x *Config) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *Config) GetVolumes() map[string]string {
	if x != nil {
		return x.Volumes
	}
	return nil
}

func (x *Config) GetWorkingDir() string {
	if x != nil {
		return x.WorkingDir
	}
	return ""
}

func (x *Config) GetExposedPorts() map[string]string {
	if x != nil {
		return x.ExposedPorts
	}
	return nil
}

func (x *Config) GetArgsEscaped() bool {
	if x != nil {
		return x.ArgsEscaped
	}
	return false
}

func (x *Config) GetNetworkDisabled() bool {
	if x != nil {
		return x.NetworkDisabled
	}
	return false
}

func (x *Config) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *Config) GetStopSignal() string {
	if x != nil {
		return x.StopSignal
	}
	return ""
}

func (x *Config) GetShell() []string {
	if x != nil {
		return x.Shell
	}
	return nil
}

type HealthConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Test is the test to perform to check that the container is healthy.
	// An empty slice means to inherit the default.
	// The options are:
	// {} : inherit healthcheck
	// {"NONE"} : disable healthcheck
	// {"CMD", args...} : exec arguments directly
	// {"CMD-SHELL", command} : run command with system's default shell
	Test []string `protobuf:"bytes,11,rep,name=test,proto3" json:"test,omitempty"`
	// Zero means to inherit. Durations are expressed as integer nanoseconds.
	// Interval is the time to wait between checks.
	Interval int64 `protobuf:"varint,101,opt,name=interval,proto3" json:"interval,omitempty"` // time.Duration
	// Timeout is the time to wait before considering the check to have hung.
	Timeout int64 `protobuf:"varint,111,opt,name=timeout,proto3" json:"timeout,omitempty"` // time.Duration
	// The start period for the container to initialize before the retries starts
	// to count down.
	StartPeriod int64 `protobuf:"varint,121,opt,name=startPeriod,proto3" json:"startPeriod,omitempty"` // time.Duration
	// Retries is the number of consecutive failures needed to consider a
	// container as unhealthy. Zero means inherit.
	Retries int32 `protobuf:"varint,201,opt,name=retries,proto3" json:"retries,omitempty"`
}

func (x *HealthConfig) Reset() {
	*x = HealthConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_hsec_report_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthConfig) ProtoMessage() {}

func (x *HealthConfig) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_hsec_report_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthConfig.ProtoReflect.Descriptor instead.
func (*HealthConfig) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_hsec_report_proto_rawDescGZIP(), []int{8}
}

func (x *HealthConfig) GetTest() []string {
	if x != nil {
		return x.Test
	}
	return nil
}

func (x *HealthConfig) GetInterval() int64 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *HealthConfig) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *HealthConfig) GetStartPeriod() int64 {
	if x != nil {
		return x.StartPeriod
	}
	return 0
}

func (x *HealthConfig) GetRetries() int32 {
	if x != nil {
		return x.Retries
	}
	return 0
}

type BOM struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerialNumber string `protobuf:"bytes,31,opt,name=serialNumber,proto3" json:"serialNumber,omitempty"`
	Version      int32  `protobuf:"varint,41,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *BOM) Reset() {
	*x = BOM{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_hsec_report_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BOM) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BOM) ProtoMessage() {}

func (x *BOM) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_hsec_report_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BOM.ProtoReflect.Descriptor instead.
func (*BOM) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_hsec_report_proto_rawDescGZIP(), []int{9}
}

func (x *BOM) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *BOM) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

var File_n2x_protobuf_resources_v1_hsec_report_proto protoreflect.FileDescriptor

var file_n2x_protobuf_resources_v1_hsec_report_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x6e, 0x32, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x73, 0x65, 0x63,
	0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x68,
	0x73, 0x65, 0x63, 0x1a, 0x2b, 0x6e, 0x32, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x68,
	0x73, 0x65, 0x63, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x85, 0x02, 0x0a, 0x06, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x68, 0x73, 0x65, 0x63,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x3d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x68, 0x73, 0x65, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x03, 0x42,
	0x4f, 0x4d, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x68, 0x73, 0x65, 0x63, 0x2e,
	0x42, 0x4f, 0x4d, 0x52, 0x03, 0x42, 0x4f, 0x4d, 0x22, 0xe0, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x02, 0x4f, 0x53, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x68, 0x73, 0x65, 0x63, 0x2e, 0x4f, 0x53, 0x52,
	0x02, 0x4f, 0x53, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x69, 0x66, 0x66, 0x49, 0x44, 0x73, 0x18, 0x6f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x64, 0x69, 0x66, 0x66, 0x49, 0x44, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x54,
	0x61, 0x67, 0x73, 0x18, 0x79, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x54,
	0x61, 0x67, 0x73, 0x12, 0x21, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6f, 0x44, 0x69, 0x67, 0x65, 0x73,
	0x74, 0x73, 0x18, 0x83, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x6f, 0x44,
	0x69, 0x67, 0x65, 0x73, 0x74, 0x73, 0x12, 0x33, 0x0a, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x8d, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x68,
	0x73, 0x65, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x0b,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x60, 0x0a, 0x02, 0x4f,
	0x53, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x45, 0x4f, 0x53, 0x4c, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x45, 0x4f, 0x53,
	0x4c, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x29, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x22, 0x83, 0x03,
	0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x29, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x18, 0x3d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x68, 0x73, 0x65, 0x63, 0x2e, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x4f, 0x53, 0x18, 0x47, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x4f, 0x53, 0x12,
	0x24, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x74, 0x46, 0x53, 0x18, 0x51, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x68, 0x73, 0x65, 0x63, 0x2e, 0x52, 0x6f, 0x6f, 0x74, 0x46, 0x53, 0x52, 0x06, 0x72,
	0x6f, 0x6f, 0x74, 0x46, 0x53, 0x12, 0x24, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x5b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x68, 0x73, 0x65, 0x63, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x4f,
	0x53, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x4f, 0x53, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x74, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x53, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x18, 0x79, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x4f, 0x53, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x07, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x1f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x33, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x42, 0x0a, 0x06, 0x52, 0x6f, 0x6f,
	0x74, 0x46, 0x53, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x07, 0x64, 0x69, 0x66, 0x66, 0x49,
	0x44, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x68, 0x73, 0x65, 0x63, 0x2e,
	0x48, 0x61, 0x73, 0x68, 0x52, 0x07, 0x64, 0x69, 0x66, 0x66, 0x49, 0x44, 0x73, 0x22, 0x36, 0x0a,
	0x04, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74,
	0x68, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69,
	0x74, 0x68, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x65, 0x78, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x68, 0x65, 0x78, 0x22, 0xeb, 0x07, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x22, 0x0a, 0x0c, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x53, 0x74, 0x64, 0x65, 0x72, 0x72,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x53, 0x74,
	0x64, 0x65, 0x72, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x53, 0x74,
	0x64, 0x69, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x53, 0x74, 0x64, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x53, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x53, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d,
	0x64, 0x18, 0x29, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x34, 0x0a, 0x0b,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x33, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x68, 0x73, 0x65, 0x63, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x3d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x47, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x51, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x03, 0x65, 0x6e, 0x76, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x5b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x18, 0x6f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68, 0x73, 0x65, 0x63, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x6e, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x18, 0x79, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x6e, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x12, 0x1d, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x53, 0x74, 0x64, 0x69, 0x6e, 0x18,
	0x83, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x53, 0x74, 0x64, 0x69,
	0x6e, 0x12, 0x1d, 0x0a, 0x09, 0x73, 0x74, 0x64, 0x69, 0x6e, 0x4f, 0x6e, 0x63, 0x65, 0x18, 0x8d,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x74, 0x64, 0x69, 0x6e, 0x4f, 0x6e, 0x63, 0x65,
	0x12, 0x11, 0x0a, 0x03, 0x74, 0x74, 0x79, 0x18, 0x97, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03,
	0x74, 0x74, 0x79, 0x12, 0x13, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0xa1, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x07, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x73, 0x18, 0xab, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x73, 0x65,
	0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x12, 0x1f,
	0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x72, 0x18, 0xb5, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x72, 0x12,
	0x43, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x18,
	0xbf, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x73, 0x65, 0x63, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x50, 0x6f, 0x72, 0x74,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x50,
	0x6f, 0x72, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0b, 0x61, 0x72, 0x67, 0x73, 0x45, 0x73, 0x63, 0x61,
	0x70, 0x65, 0x64, 0x18, 0xc9, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x72, 0x67, 0x73,
	0x45, 0x73, 0x63, 0x61, 0x70, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x0f, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0xd3, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0xdd, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x70, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x18, 0xe7, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x6f, 0x70, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x12, 0x15, 0x0a, 0x05, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x18, 0xf1, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x1a, 0x39, 0x0a, 0x0b, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3a, 0x0a, 0x0c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x3f, 0x0a, 0x11, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x50, 0x6f, 0x72,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x95, 0x01, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x18, 0x65, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18,
	0x6f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x79, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x12, 0x19, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0xc9, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x43, 0x0a, 0x03, 0x42,
	0x4f, 0x4d, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x29, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x42, 0x26, 0x5a, 0x24, 0x6e, 0x32, 0x78, 0x2e, 0x64, 0x65, 0x76, 0x2f, 0x78, 0x2d, 0x61, 0x70,
	0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2f, 0x68, 0x73, 0x65, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_n2x_protobuf_resources_v1_hsec_report_proto_rawDescOnce sync.Once
	file_n2x_protobuf_resources_v1_hsec_report_proto_rawDescData = file_n2x_protobuf_resources_v1_hsec_report_proto_rawDesc
)

func file_n2x_protobuf_resources_v1_hsec_report_proto_rawDescGZIP() []byte {
	file_n2x_protobuf_resources_v1_hsec_report_proto_rawDescOnce.Do(func() {
		file_n2x_protobuf_resources_v1_hsec_report_proto_rawDescData = protoimpl.X.CompressGZIP(file_n2x_protobuf_resources_v1_hsec_report_proto_rawDescData)
	})
	return file_n2x_protobuf_resources_v1_hsec_report_proto_rawDescData
}

var file_n2x_protobuf_resources_v1_hsec_report_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_n2x_protobuf_resources_v1_hsec_report_proto_goTypes = []any{
	(*Report)(nil),       // 0: hsec.Report
	(*Metadata)(nil),     // 1: hsec.Metadata
	(*OS)(nil),           // 2: hsec.OS
	(*ConfigFile)(nil),   // 3: hsec.ConfigFile
	(*History)(nil),      // 4: hsec.History
	(*RootFS)(nil),       // 5: hsec.RootFS
	(*Hash)(nil),         // 6: hsec.Hash
	(*Config)(nil),       // 7: hsec.Config
	(*HealthConfig)(nil), // 8: hsec.HealthConfig
	(*BOM)(nil),          // 9: hsec.BOM
	nil,                  // 10: hsec.Config.LabelsEntry
	nil,                  // 11: hsec.Config.VolumesEntry
	nil,                  // 12: hsec.Config.ExposedPortsEntry
	(*Result)(nil),       // 13: hsec.Result
}
var file_n2x_protobuf_resources_v1_hsec_report_proto_depIdxs = []int32{
	1,  // 0: hsec.Report.metadata:type_name -> hsec.Metadata
	13, // 1: hsec.Report.results:type_name -> hsec.Result
	9,  // 2: hsec.Report.BOM:type_name -> hsec.BOM
	2,  // 3: hsec.Metadata.OS:type_name -> hsec.OS
	3,  // 4: hsec.Metadata.imageConfig:type_name -> hsec.ConfigFile
	4,  // 5: hsec.ConfigFile.history:type_name -> hsec.History
	5,  // 6: hsec.ConfigFile.rootFS:type_name -> hsec.RootFS
	7,  // 7: hsec.ConfigFile.config:type_name -> hsec.Config
	6,  // 8: hsec.RootFS.diffIDs:type_name -> hsec.Hash
	8,  // 9: hsec.Config.healthcheck:type_name -> hsec.HealthConfig
	10, // 10: hsec.Config.labels:type_name -> hsec.Config.LabelsEntry
	11, // 11: hsec.Config.volumes:type_name -> hsec.Config.VolumesEntry
	12, // 12: hsec.Config.exposedPorts:type_name -> hsec.Config.ExposedPortsEntry
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_n2x_protobuf_resources_v1_hsec_report_proto_init() }
func file_n2x_protobuf_resources_v1_hsec_report_proto_init() {
	if File_n2x_protobuf_resources_v1_hsec_report_proto != nil {
		return
	}
	file_n2x_protobuf_resources_v1_hsec_result_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_n2x_protobuf_resources_v1_hsec_report_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Report); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_hsec_report_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_hsec_report_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*OS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_hsec_report_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ConfigFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_hsec_report_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*History); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_hsec_report_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*RootFS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_hsec_report_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Hash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_hsec_report_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_hsec_report_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*HealthConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_hsec_report_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*BOM); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_n2x_protobuf_resources_v1_hsec_report_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_n2x_protobuf_resources_v1_hsec_report_proto_goTypes,
		DependencyIndexes: file_n2x_protobuf_resources_v1_hsec_report_proto_depIdxs,
		MessageInfos:      file_n2x_protobuf_resources_v1_hsec_report_proto_msgTypes,
	}.Build()
	File_n2x_protobuf_resources_v1_hsec_report_proto = out.File
	file_n2x_protobuf_resources_v1_hsec_report_proto_rawDesc = nil
	file_n2x_protobuf_resources_v1_hsec_report_proto_goTypes = nil
	file_n2x_protobuf_resources_v1_hsec_report_proto_depIdxs = nil
}
