// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0--rc1
// source: n2x/protobuf/resources/v1/ops/workflow.proto

package ops

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	datetime "n2x.dev/x-api-go/grpc/common/datetime"
	status "n2x.dev/x-api-go/grpc/common/status"
	events "n2x.dev/x-api-go/grpc/resources/events"
	resource "n2x.dev/x-api-go/grpc/resources/resource"
	topology "n2x.dev/x-api-go/grpc/resources/topology"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WorkflowActionType int32

const (
	WorkflowActionType_REVIEW  WorkflowActionType = 0
	WorkflowActionType_APPROVE WorkflowActionType = 1
)

// Enum value maps for WorkflowActionType.
var (
	WorkflowActionType_name = map[int32]string{
		0: "REVIEW",
		1: "APPROVE",
	}
	WorkflowActionType_value = map[string]int32{
		"REVIEW":  0,
		"APPROVE": 1,
	}
)

func (x WorkflowActionType) Enum() *WorkflowActionType {
	p := new(WorkflowActionType)
	*p = x
	return p
}

func (x WorkflowActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkflowActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_n2x_protobuf_resources_v1_ops_workflow_proto_enumTypes[0].Descriptor()
}

func (WorkflowActionType) Type() protoreflect.EnumType {
	return &file_n2x_protobuf_resources_v1_ops_workflow_proto_enumTypes[0]
}

func (x WorkflowActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkflowActionType.Descriptor instead.
func (WorkflowActionType) EnumDescriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_ops_workflow_proto_rawDescGZIP(), []int{0}
}

type CommandResultStatus int32

const (
	CommandResultStatus_EXECUTED CommandResultStatus = 0
	CommandResultStatus_RUNNING  CommandResultStatus = 10
	CommandResultStatus_FAILED   CommandResultStatus = 20
)

// Enum value maps for CommandResultStatus.
var (
	CommandResultStatus_name = map[int32]string{
		0:  "EXECUTED",
		10: "RUNNING",
		20: "FAILED",
	}
	CommandResultStatus_value = map[string]int32{
		"EXECUTED": 0,
		"RUNNING":  10,
		"FAILED":   20,
	}
)

func (x CommandResultStatus) Enum() *CommandResultStatus {
	p := new(CommandResultStatus)
	*p = x
	return p
}

func (x CommandResultStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandResultStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_n2x_protobuf_resources_v1_ops_workflow_proto_enumTypes[1].Descriptor()
}

func (CommandResultStatus) Type() protoreflect.EnumType {
	return &file_n2x_protobuf_resources_v1_ops_workflow_proto_enumTypes[1]
}

func (x CommandResultStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandResultStatus.Descriptor instead.
func (CommandResultStatus) EnumDescriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_ops_workflow_proto_rawDescGZIP(), []int{1}
}

type Workflow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID    string                 `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	TenantID     string                 `protobuf:"bytes,2,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	ProjectID    string                 `protobuf:"bytes,11,opt,name=projectID,proto3" json:"projectID,omitempty"`
	WorkflowID   string                 `protobuf:"bytes,21,opt,name=workflowID,proto3" json:"workflowID,omitempty"`
	Token        string                 `protobuf:"bytes,31,opt,name=token,proto3" json:"token,omitempty"`
	Name         string                 `protobuf:"bytes,41,opt,name=name,proto3" json:"name,omitempty"`
	Description  string                 `protobuf:"bytes,42,opt,name=description,proto3" json:"description,omitempty"`
	Enabled      bool                   `protobuf:"varint,51,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Reviewed     bool                   `protobuf:"varint,71,opt,name=reviewed,proto3" json:"reviewed,omitempty"`
	Reviewers    []string               `protobuf:"bytes,72,rep,name=reviewers,proto3" json:"reviewers,omitempty"`                                                                                           // []string{email1, email2..}
	ReviewedBy   map[string]*Validation `protobuf:"bytes,73,rep,name=reviewedBy,proto3" json:"reviewedBy,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // map[email]*Validation
	Approved     bool                   `protobuf:"varint,81,opt,name=approved,proto3" json:"approved,omitempty"`
	Approvers    []string               `protobuf:"bytes,82,rep,name=approvers,proto3" json:"approvers,omitempty"`                                                                                           // []string{email1, email2..}
	ApprovedBy   map[string]*Validation `protobuf:"bytes,83,rep,name=approvedBy,proto3" json:"approvedBy,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // map[email]*Validation
	Triggers     *Triggers              `protobuf:"bytes,91,opt,name=triggers,proto3" json:"triggers,omitempty"`
	Tasks        []*Task                `protobuf:"bytes,101,rep,name=tasks,proto3" json:"tasks,omitempty"`
	Notify       *Notify                `protobuf:"bytes,111,opt,name=notify,proto3" json:"notify,omitempty"`
	Targets      []*topology.NodeReq    `protobuf:"bytes,121,rep,name=targets,proto3" json:"targets,omitempty"`
	TaskLogs     []*TaskLog             `protobuf:"bytes,131,rep,name=taskLogs,proto3" json:"taskLogs,omitempty"`
	EventMetrics *events.EventMetrics   `protobuf:"bytes,1001,opt,name=eventMetrics,proto3" json:"eventMetrics,omitempty"`
}

func (x *Workflow) Reset() {
	*x = Workflow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Workflow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workflow) ProtoMessage() {}

func (x *Workflow) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workflow.ProtoReflect.Descriptor instead.
func (*Workflow) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_ops_workflow_proto_rawDescGZIP(), []int{0}
}

func (x *Workflow) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *Workflow) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

func (x *Workflow) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *Workflow) GetWorkflowID() string {
	if x != nil {
		return x.WorkflowID
	}
	return ""
}

func (x *Workflow) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *Workflow) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Workflow) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Workflow) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Workflow) GetReviewed() bool {
	if x != nil {
		return x.Reviewed
	}
	return false
}

func (x *Workflow) GetReviewers() []string {
	if x != nil {
		return x.Reviewers
	}
	return nil
}

func (x *Workflow) GetReviewedBy() map[string]*Validation {
	if x != nil {
		return x.ReviewedBy
	}
	return nil
}

func (x *Workflow) GetApproved() bool {
	if x != nil {
		return x.Approved
	}
	return false
}

func (x *Workflow) GetApprovers() []string {
	if x != nil {
		return x.Approvers
	}
	return nil
}

func (x *Workflow) GetApprovedBy() map[string]*Validation {
	if x != nil {
		return x.ApprovedBy
	}
	return nil
}

func (x *Workflow) GetTriggers() *Triggers {
	if x != nil {
		return x.Triggers
	}
	return nil
}

func (x *Workflow) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *Workflow) GetNotify() *Notify {
	if x != nil {
		return x.Notify
	}
	return nil
}

func (x *Workflow) GetTargets() []*topology.NodeReq {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *Workflow) GetTaskLogs() []*TaskLog {
	if x != nil {
		return x.TaskLogs
	}
	return nil
}

func (x *Workflow) GetEventMetrics() *events.EventMetrics {
	if x != nil {
		return x.EventMetrics
	}
	return nil
}

type Workflows struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta      *resource.ListResponse `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Workflows []*Workflow            `protobuf:"bytes,2,rep,name=workflows,proto3" json:"workflows,omitempty"`
}

func (x *Workflows) Reset() {
	*x = Workflows{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Workflows) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workflows) ProtoMessage() {}

func (x *Workflows) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workflows.ProtoReflect.Descriptor instead.
func (*Workflows) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_ops_workflow_proto_rawDescGZIP(), []int{1}
}

func (x *Workflows) GetMeta() *resource.ListResponse {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Workflows) GetWorkflows() []*Workflow {
	if x != nil {
		return x.Workflows
	}
	return nil
}

type ListWorkflowsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta    *resource.ListRequest `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Project *ProjectReq           `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *ListWorkflowsRequest) Reset() {
	*x = ListWorkflowsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkflowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkflowsRequest) ProtoMessage() {}

func (x *ListWorkflowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkflowsRequest.ProtoReflect.Descriptor instead.
func (*ListWorkflowsRequest) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_ops_workflow_proto_rawDescGZIP(), []int{2}
}

func (x *ListWorkflowsRequest) GetMeta() *resource.ListRequest {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *ListWorkflowsRequest) GetProject() *ProjectReq {
	if x != nil {
		return x.Project
	}
	return nil
}

type Validation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Responsible *Person `protobuf:"bytes,1,opt,name=responsible,proto3" json:"responsible,omitempty"`
	Validated   bool    `protobuf:"varint,2,opt,name=validated,proto3" json:"validated,omitempty"`
	Timestamp   int64   `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *Validation) Reset() {
	*x = Validation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Validation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Validation) ProtoMessage() {}

func (x *Validation) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Validation.ProtoReflect.Descriptor instead.
func (*Validation) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_ops_workflow_proto_rawDescGZIP(), []int{3}
}

func (x *Validation) GetResponsible() *Person {
	if x != nil {
		return x.Responsible
	}
	return nil
}

func (x *Validation) GetValidated() bool {
	if x != nil {
		return x.Validated
	}
	return false
}

func (x *Validation) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type Triggers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Webhook  bool      `protobuf:"varint,1,opt,name=webhook,proto3" json:"webhook,omitempty"`
	Schedule *Schedule `protobuf:"bytes,11,opt,name=schedule,proto3" json:"schedule,omitempty"`
}

func (x *Triggers) Reset() {
	*x = Triggers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Triggers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Triggers) ProtoMessage() {}

func (x *Triggers) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Triggers.ProtoReflect.Descriptor instead.
func (*Triggers) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_ops_workflow_proto_rawDescGZIP(), []int{4}
}

func (x *Triggers) GetWebhook() bool {
	if x != nil {
		return x.Webhook
	}
	return false
}

func (x *Triggers) GetSchedule() *Schedule {
	if x != nil {
		return x.Schedule
	}
	return nil
}

type Schedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled  bool               `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	DateTime *datetime.DateTime `protobuf:"bytes,2,opt,name=dateTime,proto3" json:"dateTime,omitempty"`
	Crontab  string             `protobuf:"bytes,3,opt,name=crontab,proto3" json:"crontab,omitempty"`
}

func (x *Schedule) Reset() {
	*x = Schedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Schedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schedule) ProtoMessage() {}

func (x *Schedule) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schedule.ProtoReflect.Descriptor instead.
func (*Schedule) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_ops_workflow_proto_rawDescGZIP(), []int{5}
}

func (x *Schedule) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Schedule) GetDateTime() *datetime.DateTime {
	if x != nil {
		return x.DateTime
	}
	return nil
}

func (x *Schedule) GetCrontab() string {
	if x != nil {
		return x.Crontab
	}
	return ""
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string       `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Command     *CommandExec `protobuf:"bytes,31,opt,name=command,proto3" json:"command,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_ops_workflow_proto_rawDescGZIP(), []int{6}
}

func (x *Task) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Task) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Task) GetCommand() *CommandExec {
	if x != nil {
		return x.Command
	}
	return nil
}

type Notify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email *EmailNotification `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Slack *SlackNotification `protobuf:"bytes,11,opt,name=slack,proto3" json:"slack,omitempty"`
}

func (x *Notify) Reset() {
	*x = Notify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notify) ProtoMessage() {}

func (x *Notify) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notify.ProtoReflect.Descriptor instead.
func (*Notify) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_ops_workflow_proto_rawDescGZIP(), []int{7}
}

func (x *Notify) GetEmail() *EmailNotification {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *Notify) GetSlack() *SlackNotification {
	if x != nil {
		return x.Slack
	}
	return nil
}

type EmailNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipients []*Person `protobuf:"bytes,1,rep,name=recipients,proto3" json:"recipients,omitempty"`
}

func (x *EmailNotification) Reset() {
	*x = EmailNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailNotification) ProtoMessage() {}

func (x *EmailNotification) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailNotification.ProtoReflect.Descriptor instead.
func (*EmailNotification) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_ops_workflow_proto_rawDescGZIP(), []int{8}
}

func (x *EmailNotification) GetRecipients() []*Person {
	if x != nil {
		return x.Recipients
	}
	return nil
}

type SlackNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipients []*Person `protobuf:"bytes,1,rep,name=recipients,proto3" json:"recipients,omitempty"`
}

func (x *SlackNotification) Reset() {
	*x = SlackNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlackNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlackNotification) ProtoMessage() {}

func (x *SlackNotification) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlackNotification.ProtoReflect.Descriptor instead.
func (*SlackNotification) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_ops_workflow_proto_rawDescGZIP(), []int{9}
}

func (x *SlackNotification) GetRecipients() []*Person {
	if x != nil {
		return x.Recipients
	}
	return nil
}

type Person struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *Person) Reset() {
	*x = Person{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Person) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Person) ProtoMessage() {}

func (x *Person) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Person.ProtoReflect.Descriptor instead.
func (*Person) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_ops_workflow_proto_rawDescGZIP(), []int{10}
}

func (x *Person) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type WorkflowAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      WorkflowActionType `protobuf:"varint,1,opt,name=type,proto3,enum=ops.WorkflowActionType" json:"type,omitempty"`
	Token     string             `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Action    bool               `protobuf:"varint,3,opt,name=action,proto3" json:"action,omitempty"`
	UserEmail string             `protobuf:"bytes,4,opt,name=userEmail,proto3" json:"userEmail,omitempty"`
}

func (x *WorkflowAction) Reset() {
	*x = WorkflowAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowAction) ProtoMessage() {}

func (x *WorkflowAction) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowAction.ProtoReflect.Descriptor instead.
func (*WorkflowAction) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_ops_workflow_proto_rawDescGZIP(), []int{11}
}

func (x *WorkflowAction) GetType() WorkflowActionType {
	if x != nil {
		return x.Type
	}
	return WorkflowActionType_REVIEW
}

func (x *WorkflowAction) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *WorkflowAction) GetAction() bool {
	if x != nil {
		return x.Action
	}
	return false
}

func (x *WorkflowAction) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

type WorkflowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID  string `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	TenantID   string `protobuf:"bytes,2,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	ProjectID  string `protobuf:"bytes,11,opt,name=projectID,proto3" json:"projectID,omitempty"`
	WorkflowID string `protobuf:"bytes,21,opt,name=workflowID,proto3" json:"workflowID,omitempty"`
}

func (x *WorkflowReq) Reset() {
	*x = WorkflowReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowReq) ProtoMessage() {}

func (x *WorkflowReq) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowReq.ProtoReflect.Descriptor instead.
func (*WorkflowReq) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_ops_workflow_proto_rawDescGZIP(), []int{12}
}

func (x *WorkflowReq) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *WorkflowReq) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

func (x *WorkflowReq) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *WorkflowReq) GetWorkflowID() string {
	if x != nil {
		return x.WorkflowID
	}
	return ""
}

type TaskLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID       string `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	TenantID        string `protobuf:"bytes,2,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	ProjectID       string `protobuf:"bytes,11,opt,name=projectID,proto3" json:"projectID,omitempty"`
	WorkflowID      string `protobuf:"bytes,21,opt,name=workflowID,proto3" json:"workflowID,omitempty"`
	TaskLogID       string `protobuf:"bytes,31,opt,name=taskLogID,proto3" json:"taskLogID,omitempty"`
	TaskName        string `protobuf:"bytes,41,opt,name=taskName,proto3" json:"taskName,omitempty"`
	TaskDescription string `protobuf:"bytes,42,opt,name=taskDescription,proto3" json:"taskDescription,omitempty"`
	// string netID = 62;
	// string subnetID = 63;
	NodeID       string                 `protobuf:"bytes,64,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	NodeName     string                 `protobuf:"bytes,65,opt,name=nodeName,proto3" json:"nodeName,omitempty"`
	Status       *status.StatusResponse `protobuf:"bytes,71,opt,name=status,proto3" json:"status,omitempty"`
	Result       *CommandResult         `protobuf:"bytes,72,opt,name=result,proto3" json:"result,omitempty"`
	StdoutStderr []byte                 `protobuf:"bytes,103,opt,name=stdoutStderr,proto3" json:"stdoutStderr,omitempty"` // combined stdout + stderr
}

func (x *TaskLog) Reset() {
	*x = TaskLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskLog) ProtoMessage() {}

func (x *TaskLog) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskLog.ProtoReflect.Descriptor instead.
func (*TaskLog) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_ops_workflow_proto_rawDescGZIP(), []int{13}
}

func (x *TaskLog) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *TaskLog) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

func (x *TaskLog) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *TaskLog) GetWorkflowID() string {
	if x != nil {
		return x.WorkflowID
	}
	return ""
}

func (x *TaskLog) GetTaskLogID() string {
	if x != nil {
		return x.TaskLogID
	}
	return ""
}

func (x *TaskLog) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *TaskLog) GetTaskDescription() string {
	if x != nil {
		return x.TaskDescription
	}
	return ""
}

func (x *TaskLog) GetNodeID() string {
	if x != nil {
		return x.NodeID
	}
	return ""
}

func (x *TaskLog) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *TaskLog) GetStatus() *status.StatusResponse {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *TaskLog) GetResult() *CommandResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *TaskLog) GetStdoutStderr() []byte {
	if x != nil {
		return x.StdoutStderr
	}
	return nil
}

type TaskLogs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta     *resource.ListResponse `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	TaskLogs []*TaskLog             `protobuf:"bytes,2,rep,name=taskLogs,proto3" json:"taskLogs,omitempty"`
}

func (x *TaskLogs) Reset() {
	*x = TaskLogs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskLogs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskLogs) ProtoMessage() {}

func (x *TaskLogs) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskLogs.ProtoReflect.Descriptor instead.
func (*TaskLogs) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_ops_workflow_proto_rawDescGZIP(), []int{14}
}

func (x *TaskLogs) GetMeta() *resource.ListResponse {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *TaskLogs) GetTaskLogs() []*TaskLog {
	if x != nil {
		return x.TaskLogs
	}
	return nil
}

type ListTaskLogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta     *resource.ListRequest `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Workflow *WorkflowReq          `protobuf:"bytes,2,opt,name=workflow,proto3" json:"workflow,omitempty"`
}

func (x *ListTaskLogsRequest) Reset() {
	*x = ListTaskLogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTaskLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTaskLogsRequest) ProtoMessage() {}

func (x *ListTaskLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTaskLogsRequest.ProtoReflect.Descriptor instead.
func (*ListTaskLogsRequest) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_ops_workflow_proto_rawDescGZIP(), []int{15}
}

func (x *ListTaskLogsRequest) GetMeta() *resource.ListRequest {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *ListTaskLogsRequest) GetWorkflow() *WorkflowReq {
	if x != nil {
		return x.Workflow
	}
	return nil
}

type TaskLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID  string `protobuf:"bytes,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	TenantID   string `protobuf:"bytes,2,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	ProjectID  string `protobuf:"bytes,11,opt,name=projectID,proto3" json:"projectID,omitempty"`
	WorkflowID string `protobuf:"bytes,21,opt,name=workflowID,proto3" json:"workflowID,omitempty"`
	TaskLogID  string `protobuf:"bytes,31,opt,name=taskLogID,proto3" json:"taskLogID,omitempty"`
}

func (x *TaskLogReq) Reset() {
	*x = TaskLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskLogReq) ProtoMessage() {}

func (x *TaskLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskLogReq.ProtoReflect.Descriptor instead.
func (*TaskLogReq) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_ops_workflow_proto_rawDescGZIP(), []int{16}
}

func (x *TaskLogReq) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *TaskLogReq) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

func (x *TaskLogReq) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *TaskLogReq) GetWorkflowID() string {
	if x != nil {
		return x.WorkflowID
	}
	return ""
}

func (x *TaskLogReq) GetTaskLogID() string {
	if x != nil {
		return x.TaskLogID
	}
	return ""
}

type CommandExec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd  string   `protobuf:"bytes,1,opt,name=cmd,proto3" json:"cmd,omitempty"`
	Args []string `protobuf:"bytes,11,rep,name=args,proto3" json:"args,omitempty"`
	UID  int32    `protobuf:"varint,21,opt,name=UID,proto3" json:"UID,omitempty"`
	GID  int32    `protobuf:"varint,22,opt,name=GID,proto3" json:"GID,omitempty"`
}

func (x *CommandExec) Reset() {
	*x = CommandExec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandExec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandExec) ProtoMessage() {}

func (x *CommandExec) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandExec.ProtoReflect.Descriptor instead.
func (*CommandExec) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_ops_workflow_proto_rawDescGZIP(), []int{17}
}

func (x *CommandExec) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *CommandExec) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *CommandExec) GetUID() int32 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *CommandExec) GetGID() int32 {
	if x != nil {
		return x.GID
	}
	return 0
}

type CommandResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   CommandResultStatus `protobuf:"varint,1,opt,name=status,proto3,enum=ops.CommandResultStatus" json:"status,omitempty"` // executed, canceled...
	Duration int64               `protobuf:"varint,11,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *CommandResult) Reset() {
	*x = CommandResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandResult) ProtoMessage() {}

func (x *CommandResult) ProtoReflect() protoreflect.Message {
	mi := &file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandResult.ProtoReflect.Descriptor instead.
func (*CommandResult) Descriptor() ([]byte, []int) {
	return file_n2x_protobuf_resources_v1_ops_workflow_proto_rawDescGZIP(), []int{18}
}

func (x *CommandResult) GetStatus() CommandResultStatus {
	if x != nil {
		return x.Status
	}
	return CommandResultStatus_EXECUTED
}

func (x *CommandResult) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

var File_n2x_protobuf_resources_v1_ops_workflow_proto protoreflect.FileDescriptor

var file_n2x_protobuf_resources_v1_ops_workflow_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x6e, 0x32, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x70, 0x73, 0x2f,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03,
	0x6f, 0x70, 0x73, 0x1a, 0x2d, 0x6e, 0x32, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2b, 0x6e, 0x32, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x70,
	0x73, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2e, 0x6e, 0x32, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x2f, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2d, 0x6e, 0x32, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f, 0x70, 0x6f, 0x6c,
	0x6f, 0x67, 0x79, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2d,
	0x6e, 0x32, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x6e,
	0x32, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfe, 0x06, 0x0a, 0x08, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1e,
	0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x44, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x44, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x29, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x33, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64,
	0x18, 0x47, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x18, 0x48, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x12, 0x3d,
	0x0a, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x42, 0x79, 0x18, 0x49, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x51, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x18, 0x52, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x12, 0x3d, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x64, 0x42, 0x79, 0x18, 0x53, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70,
	0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x64, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x12, 0x29, 0x0a, 0x08, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x73, 0x18, 0x5b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6f, 0x70, 0x73, 0x2e, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x52, 0x08, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x73, 0x12, 0x1f, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x6f, 0x70, 0x73, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x12, 0x23, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x6f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6f, 0x70, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52,
	0x06, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2b, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x73, 0x18, 0x79, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x6c,
	0x6f, 0x67, 0x79, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x52, 0x07, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x6f, 0x67, 0x73,
	0x18, 0x83, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6f, 0x70, 0x73, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x4c, 0x6f, 0x67, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x6f, 0x67, 0x73, 0x12,
	0x39, 0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18,
	0xe9, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x0c, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x1a, 0x4e, 0x0a, 0x0f, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x6f, 0x70, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4e, 0x0a, 0x0f, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x6f, 0x70, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x64, 0x0a, 0x09, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x12, 0x2a, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6f, 0x70, 0x73, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73,
	0x22, 0x6c, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f, 0x70, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x77,
	0x0a, 0x0a, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x0b,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x6f, 0x70, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x0b,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x4f, 0x0a, 0x08, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x29, 0x0a,
	0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x6f, 0x70, 0x73, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x08,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x6e, 0x0a, 0x08, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x2e,
	0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x72, 0x6f, 0x6e, 0x74, 0x61, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x72, 0x6f, 0x6e, 0x74, 0x61, 0x62, 0x22, 0x68, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6f, 0x70, 0x73, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x45, 0x78, 0x65, 0x63, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x22, 0x64, 0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2c, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x70,
	0x73, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x2c, 0x0a, 0x05, 0x73, 0x6c,
	0x61, 0x63, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x70, 0x73, 0x2e,
	0x53, 0x6c, 0x61, 0x63, 0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x05, 0x73, 0x6c, 0x61, 0x63, 0x6b, 0x22, 0x40, 0x0a, 0x11, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a,
	0x0a, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x6f, 0x70, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x0a,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x40, 0x0a, 0x11, 0x53, 0x6c,
	0x61, 0x63, 0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2b, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6f, 0x70, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x52, 0x0a, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x1e, 0x0a, 0x06,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x89, 0x01, 0x0a,
	0x0e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e,
	0x6f, 0x70, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x85, 0x01, 0x0a, 0x0b, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44,
	0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x44, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x44,
	0x22, 0x99, 0x03, 0x0a, 0x07, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x6f, 0x67, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x49, 0x44, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x6f, 0x67, 0x49,
	0x44, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x6f, 0x67,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x29,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x74, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x44, 0x18, 0x40, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x41, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x47, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x48, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f,
	0x70, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x64, 0x6f,
	0x75, 0x74, 0x53, 0x74, 0x64, 0x65, 0x72, 0x72, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c,
	0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x53, 0x74, 0x64, 0x65, 0x72, 0x72, 0x22, 0x60, 0x0a, 0x08,
	0x54, 0x61, 0x73, 0x6b, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x2a, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04,
	0x6d, 0x65, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x6f, 0x67, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6f, 0x70, 0x73, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x4c, 0x6f, 0x67, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x6f, 0x67, 0x73, 0x22, 0x6e,
	0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x12, 0x2c, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6f, 0x70, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x52, 0x65, 0x71, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x22, 0xa2,
	0x01, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x49, 0x44, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x6f, 0x67,
	0x49, 0x44, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x6f,
	0x67, 0x49, 0x44, 0x22, 0x57, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x45, 0x78,
	0x65, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x63, 0x6d, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x47, 0x49,
	0x44, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x47, 0x49, 0x44, 0x22, 0x5d, 0x0a, 0x0d,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x30, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e,
	0x6f, 0x70, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x2d, 0x0a, 0x12, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x56, 0x49, 0x45, 0x57, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x10, 0x01, 0x2a, 0x3c, 0x0a, 0x13, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x0a, 0x12, 0x0a, 0x0a, 0x06,
	0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x14, 0x42, 0x25, 0x5a, 0x23, 0x6e, 0x32, 0x78, 0x2e,
	0x64, 0x65, 0x76, 0x2f, 0x78, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x67, 0x72, 0x70,
	0x63, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6f, 0x70, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_n2x_protobuf_resources_v1_ops_workflow_proto_rawDescOnce sync.Once
	file_n2x_protobuf_resources_v1_ops_workflow_proto_rawDescData = file_n2x_protobuf_resources_v1_ops_workflow_proto_rawDesc
)

func file_n2x_protobuf_resources_v1_ops_workflow_proto_rawDescGZIP() []byte {
	file_n2x_protobuf_resources_v1_ops_workflow_proto_rawDescOnce.Do(func() {
		file_n2x_protobuf_resources_v1_ops_workflow_proto_rawDescData = protoimpl.X.CompressGZIP(file_n2x_protobuf_resources_v1_ops_workflow_proto_rawDescData)
	})
	return file_n2x_protobuf_resources_v1_ops_workflow_proto_rawDescData
}

var file_n2x_protobuf_resources_v1_ops_workflow_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_n2x_protobuf_resources_v1_ops_workflow_proto_goTypes = []any{
	(WorkflowActionType)(0),       // 0: ops.WorkflowActionType
	(CommandResultStatus)(0),      // 1: ops.CommandResultStatus
	(*Workflow)(nil),              // 2: ops.Workflow
	(*Workflows)(nil),             // 3: ops.Workflows
	(*ListWorkflowsRequest)(nil),  // 4: ops.ListWorkflowsRequest
	(*Validation)(nil),            // 5: ops.Validation
	(*Triggers)(nil),              // 6: ops.Triggers
	(*Schedule)(nil),              // 7: ops.Schedule
	(*Task)(nil),                  // 8: ops.Task
	(*Notify)(nil),                // 9: ops.Notify
	(*EmailNotification)(nil),     // 10: ops.EmailNotification
	(*SlackNotification)(nil),     // 11: ops.SlackNotification
	(*Person)(nil),                // 12: ops.Person
	(*WorkflowAction)(nil),        // 13: ops.WorkflowAction
	(*WorkflowReq)(nil),           // 14: ops.WorkflowReq
	(*TaskLog)(nil),               // 15: ops.TaskLog
	(*TaskLogs)(nil),              // 16: ops.TaskLogs
	(*ListTaskLogsRequest)(nil),   // 17: ops.ListTaskLogsRequest
	(*TaskLogReq)(nil),            // 18: ops.TaskLogReq
	(*CommandExec)(nil),           // 19: ops.CommandExec
	(*CommandResult)(nil),         // 20: ops.CommandResult
	nil,                           // 21: ops.Workflow.ReviewedByEntry
	nil,                           // 22: ops.Workflow.ApprovedByEntry
	(*topology.NodeReq)(nil),      // 23: topology.NodeReq
	(*events.EventMetrics)(nil),   // 24: events.EventMetrics
	(*resource.ListResponse)(nil), // 25: resource.ListResponse
	(*resource.ListRequest)(nil),  // 26: resource.ListRequest
	(*ProjectReq)(nil),            // 27: ops.ProjectReq
	(*datetime.DateTime)(nil),     // 28: datetime.DateTime
	(*status.StatusResponse)(nil), // 29: status.StatusResponse
}
var file_n2x_protobuf_resources_v1_ops_workflow_proto_depIdxs = []int32{
	21, // 0: ops.Workflow.reviewedBy:type_name -> ops.Workflow.ReviewedByEntry
	22, // 1: ops.Workflow.approvedBy:type_name -> ops.Workflow.ApprovedByEntry
	6,  // 2: ops.Workflow.triggers:type_name -> ops.Triggers
	8,  // 3: ops.Workflow.tasks:type_name -> ops.Task
	9,  // 4: ops.Workflow.notify:type_name -> ops.Notify
	23, // 5: ops.Workflow.targets:type_name -> topology.NodeReq
	15, // 6: ops.Workflow.taskLogs:type_name -> ops.TaskLog
	24, // 7: ops.Workflow.eventMetrics:type_name -> events.EventMetrics
	25, // 8: ops.Workflows.meta:type_name -> resource.ListResponse
	2,  // 9: ops.Workflows.workflows:type_name -> ops.Workflow
	26, // 10: ops.ListWorkflowsRequest.meta:type_name -> resource.ListRequest
	27, // 11: ops.ListWorkflowsRequest.project:type_name -> ops.ProjectReq
	12, // 12: ops.Validation.responsible:type_name -> ops.Person
	7,  // 13: ops.Triggers.schedule:type_name -> ops.Schedule
	28, // 14: ops.Schedule.dateTime:type_name -> datetime.DateTime
	19, // 15: ops.Task.command:type_name -> ops.CommandExec
	10, // 16: ops.Notify.email:type_name -> ops.EmailNotification
	11, // 17: ops.Notify.slack:type_name -> ops.SlackNotification
	12, // 18: ops.EmailNotification.recipients:type_name -> ops.Person
	12, // 19: ops.SlackNotification.recipients:type_name -> ops.Person
	0,  // 20: ops.WorkflowAction.type:type_name -> ops.WorkflowActionType
	29, // 21: ops.TaskLog.status:type_name -> status.StatusResponse
	20, // 22: ops.TaskLog.result:type_name -> ops.CommandResult
	25, // 23: ops.TaskLogs.meta:type_name -> resource.ListResponse
	15, // 24: ops.TaskLogs.taskLogs:type_name -> ops.TaskLog
	26, // 25: ops.ListTaskLogsRequest.meta:type_name -> resource.ListRequest
	14, // 26: ops.ListTaskLogsRequest.workflow:type_name -> ops.WorkflowReq
	1,  // 27: ops.CommandResult.status:type_name -> ops.CommandResultStatus
	5,  // 28: ops.Workflow.ReviewedByEntry.value:type_name -> ops.Validation
	5,  // 29: ops.Workflow.ApprovedByEntry.value:type_name -> ops.Validation
	30, // [30:30] is the sub-list for method output_type
	30, // [30:30] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_n2x_protobuf_resources_v1_ops_workflow_proto_init() }
func file_n2x_protobuf_resources_v1_ops_workflow_proto_init() {
	if File_n2x_protobuf_resources_v1_ops_workflow_proto != nil {
		return
	}
	file_n2x_protobuf_resources_v1_ops_project_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Workflow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Workflows); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ListWorkflowsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Validation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Triggers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Schedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Notify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*EmailNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*SlackNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*Person); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*WorkflowAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*WorkflowReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*TaskLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*TaskLogs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ListTaskLogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*TaskLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*CommandExec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*CommandResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_n2x_protobuf_resources_v1_ops_workflow_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_n2x_protobuf_resources_v1_ops_workflow_proto_goTypes,
		DependencyIndexes: file_n2x_protobuf_resources_v1_ops_workflow_proto_depIdxs,
		EnumInfos:         file_n2x_protobuf_resources_v1_ops_workflow_proto_enumTypes,
		MessageInfos:      file_n2x_protobuf_resources_v1_ops_workflow_proto_msgTypes,
	}.Build()
	File_n2x_protobuf_resources_v1_ops_workflow_proto = out.File
	file_n2x_protobuf_resources_v1_ops_workflow_proto_rawDesc = nil
	file_n2x_protobuf_resources_v1_ops_workflow_proto_goTypes = nil
	file_n2x_protobuf_resources_v1_ops_workflow_proto_depIdxs = nil
}
